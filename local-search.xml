<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>维度·数学漫步</title>
    <link href="/2023/11/11/%E7%BB%B4%E5%BA%A6%C2%B7%E6%95%B0%E5%AD%A6%E6%BC%AB%E6%AD%A5/"/>
    <url>/2023/11/11/%E7%BB%B4%E5%BA%A6%C2%B7%E6%95%B0%E5%AD%A6%E6%BC%AB%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<p> la Dimension trois 三维空间</p><p>科普的东西都讲得太深奥，四维物体就是无穷多个三维物体的集合，而两个距离最远的三维物体所在的两个不同三维空间之间的距离，就是这个四维物体的厚度，如果我们在四维空间中观察四维物体，就是无数个三维物体堆积起来，被拉长的重影，四维物体具有随意穿越无数个连续三维空间的能力，所以他们能在你的三维空间凭空出现或者消失。</p><p><a href="https://www.zhihu.com/question/26830487">(72 条消息) 如何想象四维空间和四维图形？ - 知乎 (zhihu.com)</a></p><h5 id="hipparchus"><a href="#hipparchus" class="headerlink" title="hipparchus"></a>hipparchus</h5><h6 id="经纬角度"><a href="#经纬角度" class="headerlink" title="经纬角度"></a>经纬角度</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111160844399.png" alt="image-20231111160844399"></p><h6 id="球级投影"><a href="#球级投影" class="headerlink" title="球级投影"></a>球级投影</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111160945052.png" alt="image-20231111160945052"></p><h6 id="保型"><a href="#保型" class="headerlink" title="保型"></a>保型</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111161113087.png" alt="image-20231111161113087"></p><h6 id="经纬线的投影"><a href="#经纬线的投影" class="headerlink" title="经纬线的投影"></a>经纬线的投影</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111161222080.png" alt="image-20231111161222080"></p><p>从底部看</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111161348856.png" alt="image-20231111161348856"></p><h5 id="埃舍尔"><a href="#埃舍尔" class="headerlink" title="埃舍尔"></a>埃舍尔</h5><p>画作</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111163030595.png" alt="image-20231111163030595"></p><p>二维生物发现了xx，guest it</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111161948405.png" alt="image-20231111161948405"></p><h6 id="膨胀三维物体后投影"><a href="#膨胀三维物体后投影" class="headerlink" title="膨胀三维物体后投影"></a>膨胀三维物体后投影</h6><p>注意顶点，棱，面</p><p>正十二面体</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111162759993.png" alt="image-20231111162759993"></p><h5 id="LUDWIG-SCHLAFLI"><a href="#LUDWIG-SCHLAFLI" class="headerlink" title="LUDWIG SCHLAFLI"></a>LUDWIG SCHLAFLI</h5><p>主要贡献：是列出四维空间里的所有规则多面体<br>was to describe all regular polyhedra in dimension 4</p><h6 id="单型"><a href="#单型" class="headerlink" title="单型"></a>单型</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111163744372.png" alt="image-20231111163744372"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>English</title>
    <link href="/2023/11/11/English/"/>
    <url>/2023/11/11/English/</url>
    
    <content type="html"><![CDATA[<p>However, after three months of me being born, I was detected with a genetic disorder - none other than Thalessemia Major. It turned out that the tests were false and had been wrongly done.</p><p>然而，在我出生三个月后，我被检测出患有一种遗传性疾病——不是别人，正是重型地中海贫血症。事实证明，这些测试是错误的，而且是错误进行的。</p><p>北岛我印象最深的就是这一句:那时我们有梦,关于文学,关于爱情,关于穿越世界的旅行。如今我们深夜饮酒,杯子碰到一起,都是梦破碎的声音</p><p>This is what comes into my mind when I think of a successfull life. Not having to stand annoying coworkers, no driving to a suffocating office. Just staying at home in peace and quiet and being creative at my own pace.</p><p>当我想到成功的生活时，我脑海中浮现的就是这个。不必忍受烦人的同事，不必开车去令人窒息的办公室。只是安静地呆在家里，按照自己的节奏发挥创造力。</p><p>A shame he didn’t make it.</p><p>PRIEST<br>Shameful. Our Father has granted you a path to salvation. (scoff) And yet you stray from it at every<br>opportunity.</p><p>可耻的。我们的父赐给你一条寻求救恩的道路。（嘲笑）然而，你在每一次都偏离了它<br>机会</p><p>PRIEST<br>Resist! Resist her temptat</p><p>MOUNTAIN HERMIT<br>If you’re going to trespass into my home, rifle through my thing</p><p>MOUNTAIN HERMIT<br>If you’re going to trespass into my home, rifle through my thing</p><p>LORATH<br>then at least have the decency to join me for supper. I’m bloody hungry</p><p>Forgive this…intrusion, but…I must traverse the black lake, and that cannot be done without your blessing.</p><p>If I’ve learned anything during my time here, it is that what we’re looking for and what we need are<br>rarely the same thing.</p><p>Everything I’ve done has pulled me further from home, from the place I need to be.</p><p>Hm.This audience is concluded</p><p>Old. Tired. Each day a struggle to live up to your own legacy.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>四元数</title>
    <link href="/2023/11/09/%E5%9B%9B%E5%85%83%E6%95%B0/"/>
    <url>/2023/11/09/%E5%9B%9B%E5%85%83%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="虚数基础"><a href="#虚数基础" class="headerlink" title="虚数基础"></a>虚数基础</h2><h3 id="Square-Root-of-±i"><a href="#Square-Root-of-±i" class="headerlink" title="Square-Root of ±i"></a>Square-Root of ±i</h3><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112163203517.png" alt="image-20231112163203517"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112163420743.png" alt="image-20231112163420743"></p><h3 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h3><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112163254294.png" alt="image-20231112163254294"></p><p>实部为零</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112163310027.png" alt="image-20231112163310027"></p><h2 id="复数基础"><a href="#复数基础" class="headerlink" title="复数基础"></a>复数基础</h2><h4 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109164356734.png" alt="image-20231109164356734"></p><h4 id="共轭复数"><a href="#共轭复数" class="headerlink" title="共轭复数"></a>共轭复数</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109164422303.png" alt="image-20231109164422303"></p><h4 id="复数的模"><a href="#复数的模" class="headerlink" title="复数的模"></a>复数的模</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109164444022.png" alt="image-20231109164444022"></p><h4 id="旋转（乘-i-相当于旋转90度）"><a href="#旋转（乘-i-相当于旋转90度）" class="headerlink" title="旋转（乘 i 相当于旋转90度）"></a>旋转（乘 i 相当于旋转90度）</h4><p>引入复数  和用2X2转达到的效是一样的，但复数提供了另一种有趣的记法。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109171000057.png" alt="image-20231109171000057"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112164231871.png" alt="image-20231112164231871"></p><h2 id="四元数"><a href="#四元数" class="headerlink" title="四元数"></a>四元数</h2><h4 id="纯四元数"><a href="#纯四元数" class="headerlink" title="纯四元数"></a>纯四元数</h4><p>实部为零</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160902242.png" alt="image-20231112160902242"></p><h4 id="负四元数"><a href="#负四元数" class="headerlink" title="负四元数"></a>负四元数</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160110747.png" alt="image-20231112160110747"></p><h4 id="四元数的模和单位四元数"><a href="#四元数的模和单位四元数" class="headerlink" title="四元数的模和单位四元数"></a>四元数的模和单位四元数</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109164623604.png" alt="image-20231109164623604"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109164947809.png" alt="image-20231109164947809"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160221710.png" alt="image-20231112160221710"></p><h4 id="四元数共扼和逆"><a href="#四元数共扼和逆" class="headerlink" title="四元数共扼和逆"></a>四元数共扼和逆</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109171425583.png" alt="image-20231109171425583"></p><h4 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160410388.png" alt="image-20231112160410388"></p><p>左乘</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160425433.png" alt="image-20231112160425433"></p><p>右乘</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160443290.png" alt="image-20231112160443290"></p><h4 id="Grasmann-积"><a href="#Grasmann-积" class="headerlink" title="Graßmann 积"></a>Graßmann 积</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160629217.png" alt="image-20231112160629217"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112160731942.png" alt="image-20231112160731942"></p><h4 id="指数型式"><a href="#指数型式" class="headerlink" title="指数型式"></a>指数型式</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112164416226.png" alt="image-20231112164416226"></p><h4 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112164506200.png" alt="image-20231112164506200"></p><h2 id="旋转形式"><a href="#旋转形式" class="headerlink" title="旋转形式"></a>旋转形式</h2><p><a href="https://zhuanlan.zhihu.com/p/27471300">四元数——基本概念 - 知乎 (zhihu.com)</a></p><p><a href="https://www.zhihu.com/people/yang-zhi-wei-36-45/posts">(66 条消息) 杨智为 - 知乎 (zhihu.com)</a></p><h3 id="3D旋转"><a href="#3D旋转" class="headerlink" title="3D旋转"></a>3D旋转</h3><p>之前有证明，矩阵形式和向量形式证明相同</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112162900672.png" alt="image-20231112162900672"></p><h6 id="3D旋转，向量型"><a href="#3D旋转，向量型" class="headerlink" title="3D旋转，向量型"></a>3D旋转，向量型</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231110194535017.png" alt="image-20231110194535017"></p><h6 id="3D旋转，矩阵型"><a href="#3D旋转，矩阵型" class="headerlink" title="3D旋转，矩阵型"></a>3D旋转，矩阵型</h6><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107010521198.png" alt="image-20231107010521198" style="zoom: 80%;" /><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111205151299.png" alt="image-20231111205151299"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231111205207601.png" alt="image-20231111205207601"></p><h3 id="四元数型"><a href="#四元数型" class="headerlink" title="四元数型"></a>四元数型</h3><h6 id="旋转公式，四元数型"><a href="#旋转公式，四元数型" class="headerlink" title="旋转公式，四元数型"></a>旋转公式，四元数型</h6><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112153347993.png" alt="image-20231112153347993"></p><h6 id="旋转公式，四元数压成矩阵型"><a href="#旋转公式，四元数压成矩阵型" class="headerlink" title="旋转公式，四元数压成矩阵型"></a>旋转公式，四元数压成矩阵型</h6><p>删除了1c1r ，只有（1，1）&#x3D;1 其余为零</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231110201056156.png" alt="image-20231110201056156"></p><h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><h4 id="四元数型与3d的关系"><a href="#四元数型与3d的关系" class="headerlink" title="四元数型与3d的关系"></a>四元数型与3d的关系</h4><ol><li>四元数型证明，入  和 s 可以被sin 和 cos 代换</li><li>𝑞𝑣𝑞∗ &#x3D; [0, cos(θ)v + (1 − cos(θ))(u · v)u + sin(θ)(u × v)；q是四元数，v是任意向量，u是单位向量</li></ol><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/v2-4b46668cfa60a6b0515f8b0ad30b8512_720w.webp" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/v2-f547d33625420326f5d7a8f39c7b4d72_720w.webp" alt="img"></p><p>证明</p><ol><li><strong>胡尔韦兹定理</strong></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/v2-b3c80d18d9d827a5f1776116501f2fda_720w.webp" alt="img"></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/v2-1164bca71faf4604221a73e9700e5aba_720w.webp" alt="img"></li><li><strong>q</strong>是单位四元数，所以前后模长一致，位一</li><li>还是单位向量，q&#x3D;（x,y)，模长 x^2+y^2&#x3D;1 </li><li>将轴摆正摆正， cos^2 +sin^2 &#x3D;1  ,cos是投影边 ,斜边为模长1</li></ol><h4 id="四元数型旋转推导"><a href="#四元数型旋转推导" class="headerlink" title="四元数型旋转推导"></a>四元数型旋转推导</h4><ol><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161332520.png" alt="image-20231112161332520"  /></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161352340.png" alt="image-20231112161352340"  /></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161531955.png"  /></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161556584.png" alt="image-20231112161556584"></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161432356.png" alt="image-20231112161432356"></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161657362.png" alt="image-20231112161657362"></li><li><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231112161717837.png" alt="image-20231112161717837"></li></ol><p>7.2</p><p>它们提供了三种影响轮换的方法。第一种是绕三个旋转轴中的一个旋转。第二种是任意两种绕不同轴的旋转，第三种是任意三个旋转，最初，这种方法听起来很吸引人，在很多情况下工作得很好——然而，与该技术相关存在一些问题。第一个问题是，当两个或两个以上的旋转组合起来时，可视化和预测最终旋转的行为是不同的。第二种是对特定轴的旋转很复杂，第三种是，在某些条件下，失去对物体旋转轴的访问。</p><p>8</p><p>在本章中，我们将展示如何使用四元数来围绕任意轴旋转向量。我们首先回顾一些与四元数有关的历史，以及八元数的发展。关于组合代数的短部分揭示了四元数是相当特殊的，并告诉我们为什么汉密尔顿不能基于超复数z&#x3D;s十ai十bi来识别解析代数。然后我们检查各种四元数积，以发现它们的旋转支柱。这从两个正交的四元数开始，并转向使用qpg的一般情况，其中q是一个单位笔名四元数，p是一个纯四元数。本文介绍了将四元数积表示为矩阵的两种技术，进而编码特征向量和特征值。最后，我们研究四元数扫描如何插值</p><p>爱尔兰数学家约翰·托马斯·格雷夫斯（1806-1870）发明了量子密码，最终被称为八元密码。英国数学家亚瑟·凯利（1821-1895）也对汉密尔顿的四元数很感兴趣。在1845.octonions中独立发明的八元最终就知道了凯利数而不是八元，仅仅因为格雷夫斯直到1848年才公布他的结果——凯利之后三年！就像四元数可以被定义为有序的复数对一样，八度数或八元数也可以被定义为有序的四元数对。</p><p>这是一个四正方形定律。除了复数，四元数在数学系统中占据中心位置，今天有四个这样的组合代数：实数r、复数、复数c、四元数h和八元数o，服从计算范数。1898年，德国数学家阿道夫·胡维茨（1859-1919）证明了n平方和乘以n平方的平方和是n平方的和，只有n等于1、2、4和8，由实数、复数、四元数和八元数表示。这被称为hunwik定理或7248定理。没有其他的系统是可能的，这表明了四元数在数学领域中是多么重要。因此，汉密尔顿对一个三元组系统的研究是徒劳的，因为没有三元组</p>]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>3d数学基础，图形与游戏开发</title>
    <link href="/2023/11/08/3d%E6%95%B0%E5%AD%A6/"/>
    <url>/2023/11/08/3d%E6%95%B0%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="3-7"><a href="#3-7" class="headerlink" title="3-7"></a>3-7</h2><h4 id="3-2-4-惯性坐标系"><a href="#3-2-4-惯性坐标系" class="headerlink" title="3.2.4 惯性坐标系"></a>3.2.4 惯性坐标系</h4><p>惯性坐标系的原点和物体坐标系的原点重合，但惯性坐标系的轴平行于世界标系的轴。</p><p>因为从物体坐标系转换到性坐标系只需旋转，从惯性坐标系转换到世界坐标系只需要平移。</p><h4 id="4-3-点与向量"><a href="#4-3-点与向量" class="headerlink" title="4.3 点与向量"></a>4.3 点与向量</h4><p>点表示位置，向量表示有向位移。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106232720768.png" alt="image-20231106232720768"></p><h4 id="5-7-标准化向量"><a href="#5-7-标准化向量" class="headerlink" title="5.7 标准化向量"></a>5.7 标准化向量</h4><p>向量除模长&#x3D;带方向的单位向量</p><h4 id="5-10-点乘几何解释"><a href="#5-10-点乘几何解释" class="headerlink" title="5.10 点乘几何解释"></a>5.10 点乘几何解释</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106233257484.png" alt="image-20231106233257484"></p><h4 id="5-10-3-向量投影（重要）"><a href="#5-10-3-向量投影（重要）" class="headerlink" title="5.10.3 向量投影（重要）"></a>5.10.3 向量投影（重要）</h4><p>平行的向量和n同方向</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106234016643.png" alt="image-20231106234016643"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106234032239.png" alt="image-20231106234032239"></p><h4 id="5-11-1叉乘"><a href="#5-11-1叉乘" class="headerlink" title="5.11.1叉乘"></a>5.11.1叉乘</h4><p>注意：叉乘只适用于三维向量，结果为向量有方向</p><p>计算：x行没有x再交叉相乘相减</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106234226943.png" alt="image-20231106234226943"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106234351055.png" alt="image-20231106234351055"></p><h5 id="三重积"><a href="#三重积" class="headerlink" title="三重积"></a>三重积</h5><h4 id="7-2矩阵几何意义"><a href="#7-2矩阵几何意义" class="headerlink" title="7.2矩阵几何意义"></a>7.2矩阵几何意义</h4><p>一般描述任意线性变换，</p><h2 id="8-9"><a href="#8-9" class="headerlink" title="8-9"></a>8-9</h2><h4 id="2d绕轴旋转"><a href="#2d绕轴旋转" class="headerlink" title="2d绕轴旋转"></a>2d绕轴旋转</h4><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109160901586.png" alt="image-20231109160901586" style="zoom:67%;"><h4 id="8-2-3-3D中绕任意轴旋转推导"><a href="#8-2-3-3D中绕任意轴旋转推导" class="headerlink" title="8.2.3 3D中绕任意轴旋转推导"></a>8.2.3 3D中绕任意轴旋转推导</h4><p><a href="https://www.zhihu.com/question/29636112/answer/87682029">(56 条消息) 3D中绕任意轴旋转的推断问题? - 知乎 (zhihu.com)</a></p><p>[线性代数：矩阵变换图形（三维绕任意轴向量旋转）_三维坐标绕任意轴旋转-CSDN博客](<a href="https://blog.csdn.net/cui6864520fei000/article/details/86554527?ops_request_misc=%7B%22request_id%22:%22169928677716800225536265%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=169928677716800225536265&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-12-86554527-null-null.142%5Ev96%5Epc_search_result_base6&utm_term=3%E7%BB%B4%E7%BB%95%E4%BB%BB%E6%84%8F%E8%BD%B4%E6%97%8B%E8%BD%AC">https://blog.csdn.net/cui6864520fei000/article/details/86554527?ops_request_misc=%7B%22request%5Fid%22%3A%22169928677716800225536265%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=169928677716800225536265&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-12-86554527-null-null.142^v96^pc_search_result_base6&amp;utm_term=3维绕任意轴旋转</a> 矩阵变换&amp;spm&#x3D;1018.2226.3001.4187)</p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106234840502.png" alt="image-20231106234840502" style="zoom: 80%;" /><p>流程</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106235429113.png" alt="image-20231106235429113"></p><p>注意  -PA</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107002500967.png" alt="image-20231107002500967"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/faa1735420293b866f2a2b0e9402e9e0_r.jpg"></p><p>放在第一象限参考，也是v1+v2<br>$$<br>*{\vert v^{<code>&#125;_&#123;t&#125;\vert&#125;*\sin&#123;\theta&#125;  \\ 乘这个是得到在这个方向在w的&#123;\vert v^&#123;</code>}_{t}\vert}分量<br>$$</p><p>$$<br>v^{<code>&#125;_&#123;t&#125;=\frac&#123;v_&#123;t&#125;&#125;&#123;\vert v_&#123;t&#125; \vert &#125;*&#123;\vert v^&#123;</code>}<em>{t}\vert}*\cos{\theta}+\frac{w}{\vert w\vert}<br>*{\vert v^{<code>&#125;_&#123;t&#125;\vert&#125;*\sin&#123;\theta&#125; \\ \vert v^&#123;</code>}</em>{t} \vert &#x3D;\vert v_{t}\vert&#x3D;\vert w \vert \<br>\vert v^{<code>&#125;_&#123;t&#125; \vert =&#123;v^&#123;</code>}_{t}  }\cos{\theta}+{w}\sin{\theta} \<br>$$</p><p>三角函数象限图</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/1-609-png_6_0_0_574_1126_315_108_892.979_1262.879-1701-0-115-1701.jpg" alt="三角函数_word文档在线阅读与下载_免费文档"></p><h4 id="8-2-33D中绕任意轴旋转公式（重要）"><a href="#8-2-33D中绕任意轴旋转公式（重要）" class="headerlink" title="8.2.33D中绕任意轴旋转公式（重要）"></a>8.2.33D中绕任意轴旋转公式（重要）</h4><p>x行xx，xy，xz</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107010521198.png" alt="image-20231107010521198"></p><h4 id="8-3-2沿着任意方向缩放（重要）"><a href="#8-3-2沿着任意方向缩放（重要）" class="headerlink" title="8.3.2沿着任意方向缩放（重要）"></a>8.3.2沿着任意方向缩放（重要）</h4><p>注意：平行投影会缩放，垂直投影不会。缩放因子为零则为正交投影，-1为镜像</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107011202884.png" alt="image-20231107011202884"></p><h4 id="8-8各类变换"><a href="#8-8各类变换" class="headerlink" title="8.8各类变换"></a>8.8各类变换</h4><ol><li>线性</li><li>仿射</li><li>可逆</li><li>等角</li><li>正交</li><li></li></ol><h4 id="9-2行列式"><a href="#9-2行列式" class="headerlink" title="9.2行列式"></a>9.2行列式</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107091330294.png" alt="image-20231107091330294"></p><p><strong>这里有错：+ - + 才对</strong></p><h4 id="9-3代数余子式"><a href="#9-3代数余子式" class="headerlink" title="9.3代数余子式"></a>9.3代数余子式</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107091912460.png" alt="image-20231107091912460"></p><h4 id="9-4行列式几何意义（重要）"><a href="#9-4行列式几何意义（重要）" class="headerlink" title="9.4行列式几何意义（重要）"></a>9.4行列式几何意义（重要）</h4><p><a href="https://www.cnblogs.com/AndyJee/p/3491487.html#4291028">【线性代数的几何意义】行列式的几何意义 - AndyJee - 博客园 (cnblogs.com)</a></p><p><a href="https://baike.baidu.com/item/%E5%85%8B%E8%8E%B1%E5%A7%86%E6%B3%95%E5%88%99/7211518">克莱姆法则_百度百科 (baidu.com)</a></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130204720.png" alt="image-20231107130204720"></p><h4 id="9-2矩阵的逆（重要）"><a href="#9-2矩阵的逆（重要）" class="headerlink" title="9.2矩阵的逆（重要）"></a>9.2矩阵的逆（重要）</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130517540.png" alt="image-20231107130517540"></p><h5 id="标准伴随矩阵"><a href="#标准伴随矩阵" class="headerlink" title="标准伴随矩阵"></a>标准伴随矩阵</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130613242.png" alt="image-20231107130613242"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130622023.png" alt="image-20231107130622023"></p><p>例子</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130814333.png" alt="image-20231107130814333"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130648593.png" alt="image-20231107130648593"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130728950.png" alt="image-20231107130728950"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130744116.png" alt="image-20231107130744116"></p><h4 id="9-3正交矩阵"><a href="#9-3正交矩阵" class="headerlink" title="9.3正交矩阵"></a>9.3正交矩阵</h4><h5 id="记住-旋转和镜象矩阵是正交的"><a href="#记住-旋转和镜象矩阵是正交的" class="headerlink" title="(记住:旋转和镜象矩阵是正交的)"></a>(记住:旋转和镜象矩阵是正交的)</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107130939070.png" alt="image-20231107130939070"></p><p>解释：M为正交矩阵，它的转置和逆相等</p><p>only</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107131053662.png" alt="image-20231107131053662"></p><p>r r点乘</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107131450684.png" alt="image-20231107131450684"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107131138944.png" alt="image-20231107131138944"></p><p><a href="https://zhuanlan.zhihu.com/p/50911928">线性代数之——正交矩阵和 Gram-Schmidt 正交化 - 知乎 (zhihu.com)</a></p><h5 id="施密特正交化"><a href="#施密特正交化" class="headerlink" title="施密特正交化"></a>施密特正交化</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107151350062.png" alt="image-20231107151350062"></p><h4 id="9-44D齐次矩阵"><a href="#9-44D齐次矩阵" class="headerlink" title="9.44D齐次矩阵"></a>9.44D齐次矩阵</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107151805669.png" alt="image-20231107151805669"></p><p>回忆 8.8.1 节，3X3 变换矩阵表示的是线性变换，不包含平移。</p><p>因为矩阵乘法的性质，零向量总是变换成零向量，因此，任何能用矩阵乘法表达的变换都不包含平移。</p><p>这很不幸，因为矩阵乘法和它的逆是一种非常方便的工具，不仅可以用来将复杂的变换组合成简单的单一变换，还可以操纵嵌入式坐标系间的关系。</p><p>如果能找到一种方法将3X3 变换矩阵进行扩展，使它能处理平，这将是一件多么美妙的事情啊。4X4矩阵恰好提供了一种数学上的“技巧”，使我们能够做到这一点。</p><p>w&#x3D;1</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107152157555.png" alt="image-20231107152157555"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107152402618.png" alt="image-20231107152402618"></p><p>w&#x3D;0</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107152537729.png" alt="image-20231107152537729"></p><p>4D 中的 w分能够“开关”4X4矩阵的平移部分。这个现象是非常有用的，因为有些向量代表“位置”，应当平移，而有些向量代表“方向”如表面的法向量，不应该平移。从几何意义上说，能将第一类数据当作“点”，第二类数据当作“向量”</p><p>为什么总是乘以4*4矩阵，最后一行不能省略吗？</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107152733872.png" alt="image-20231107152733872"></p><h4 id="9-4-3构造一般仿射变换"><a href="#9-4-3构造一般仿射变换" class="headerlink" title="9.4.3构造一般仿射变换"></a>9.4.3构造一般仿射变换</h4><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107153256601.png" alt="image-20231107153256601"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107153437624.png" alt="image-20231107153437624"></p><h4 id="9-4-4透视投影"><a href="#9-4-4透视投影" class="headerlink" title="9.4.4透视投影"></a>9.4.4透视投影</h4><p>正交投影也叫平行投影</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107154057952.png" alt="image-20231107154057952"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107154222407.png" alt="image-20231107154222407"></p><h5 id="9-4-5小孔成像"><a href="#9-4-5小孔成像" class="headerlink" title="9.4.5小孔成像"></a>9.4.5小孔成像</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107155021216.png" alt="image-20231107155021216"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107155220074.png" alt="image-20231107155220074"></p><h5 id="9-4-6-4D齐次矩阵表示透视投影"><a href="#9-4-6-4D齐次矩阵表示透视投影" class="headerlink" title="9.4.6 4D齐次矩阵表示透视投影"></a>9.4.6 4D齐次矩阵表示透视投影</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107160812424.png" alt="image-20231107160812424"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107160832990.png" alt="image-20231107160832990"></p><hr><p><strong>注意图片样例是在+z方向上，z&#x3D;d为投影中心，投影到xy平面。</strong></p><p>用4X4矩阵向z&#x3D;d平面投影</p><h5 id="举例习题"><a href="#举例习题" class="headerlink" title="举例习题"></a>举例习题</h5><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107162805898.png" alt="image-20231107162805898"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107162837941.png" alt="image-20231107162837941"></p><h2 id="10"><a href="#10" class="headerlink" title="10"></a>10</h2><h4 id="10-13d中的方向与角位移"><a href="#10-13d中的方向与角位移" class="headerlink" title="10.13d中的方向与角位移"></a>10.13d中的方向与角位移</h4><p>概念</p><ol><li>方向</li><li>方位</li><li>角位移</li><li>旋转</li></ol><h4 id="4-2-2位置与位移"><a href="#4-2-2位置与位移" class="headerlink" title="4.2.2位置与位移"></a>4.2.2位置与位移</h4><p>因为<strong>向量</strong>能描述事物间的<strong>位移和相对差异，所以它能用来描述相对位置</strong>。不能认为向量有绝对位置4.3.1 节有关于此话题的更多说明)。为了强这一点，当您想像一个向量，一个箭头时，记住:只有箭头的长度和方向是有意义的，<strong>不包括位置</strong>。</p><p>因为向量是没有位置的，所以能在图的任何地方表示，只要方向和长度的表示正确即可。我们经常会利用向量的这个优点，将向量平移到图中更有用的点。</p><h4 id="4-3-1相对位置"><a href="#4-3-1相对位置" class="headerlink" title="4.3.1相对位置"></a>4.3.1相对位置</h4><p>因为物体坐标系在世界坐标系中运动，很自然地会想到将世界坐标系看作“父”空间而将物体坐标系看作“子”空间。也能很自然地想到将物体打散成子块，独立地控制它们。</p><p>层次化的嵌套坐标系是动态的，能够以最方便于表达重要信息的方式进行组织。（羊毛掉落）</p><h4 id="角位移与方位（重要）"><a href="#角位移与方位（重要）" class="headerlink" title="角位移与方位（重要）"></a>角位移与方位（重要）</h4><p><strong>方位：点没有体积概念，物体有体积和形状，旋转后相对于参考系变化</strong></p><p>描述位置实际上就是描述相对于给定参考点(通常是标系的原点)的位移。</p><p>同样，描述物体方位时，也不能使用绝对量。与位置只是相对已知点的位移一样，方位是通过于相对已知方位(通常称为“单位”方位或“源”方位)的旋转来描述的。</p><p><strong>旋转的量称作角位移。换句话说，在数学上描述方位就等价于描述角位移。</strong></p><p><strong>数学的方式难以描述实际物体的方位（或者说难以表述“相对”这个概念）？</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">最好把角位移想象成在方向上的变换，这实际上是一个“源/目的”的关系。<br><br>而“方位”将用于描述“父<span class="hljs-regexp">/子”关系而不是“源/</span>目的”<br>“方位”和“角位移”的区别就像“点”和“向量”的区别一两个术语都只是在数学上等价而在概念上是不同的。上述两个例子中，第一个术语主要用来描述一个单一的“状态”，而第二个术语主要是描述“两个状态间的差别”。<br></code></pre></td></tr></table></figure><p><strong>具体来说，我们用矩阵和四元数来表示“角位移”，用欧拉角来表示“方位”</strong></p><hr><h3 id="矩阵形式"><a href="#矩阵形式" class="headerlink" title="矩阵形式"></a>矩阵形式</h3><p>只要知道方位是用矩阵来描述的，而矩阵表示的是转换后的基向量就足够了。我们通过描述一个坐标系到另一个坐标系的旋转(无论采用哪种变换)来确定一个方位。</p><h4 id="10-2-2矩阵形式的优点"><a href="#10-2-2矩阵形式的优点" class="headerlink" title="10.2.2矩阵形式的优点"></a>10.2.2矩阵形式的优点</h4><ol><li>可以立即进行向量的旋转。<strong>矩阵形式最重要的性质就是利用矩阵能在物体和惯性坐标系间旋转向量</strong>，这是其他描述方法所做不到的。为了旋转向量，必须将方位转换成矩阵形式。(关于四元数优势的一个普遍观点是它能通过四元数乘法来实现旋转，10.4.8 节里有相关阐述。但如果仔细研究数学，您会发现四元数乘法的效果和对应矩阵乘法的效果是一样的。)</li><li>矩阵的形式被图形 AP1所使用。</li><li>多个角位移连接。</li><li>矩阵的逆。</li><li><strong>矩阵是一种表达方位的“强力”方法，我们可以在当前坐标系中明确列出另一个坐标系的基向量。</strong></li></ol><h4 id="10-2-3矩阵形式的缺点"><a href="#10-2-3矩阵形式的缺点" class="headerlink" title="10.2.3矩阵形式的缺点"></a>10.2.3矩阵形式的缺点</h4><ol><li>矩阵占用了更多的内存。</li><li>难于使用。</li><li>矩阵需要满足的条件多，正交性质。病态修改导致故障。</li></ol><hr><h3 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h3><p>欧拉证明了角位移序列等于单个角位移。</p><p>欧拉角的基本思想是将角位移分解为绕三个互相垂直轴的三个旋转组成的序列。</p><p>之所以有“角位移”的说法正是因为欧拉角能用来描述任意旋转，不过，本书中主要使用这种方法<strong>来描述物体相对于父坐标空间的方位</strong></p><p>欧拉角将方位分解为绕三个互相垂直轴的旋转，那么是哪三个轴?按什么顺序?其实，任意三个轴和任意顺序都可以，但最有意义的是使用笛卡尔坐标系并按一定顺序所组成的旋转序列。</p><p>最常用的约定，也是本书使用的，是所谓的“heading-pitch-bank”约定。</p><p>在这个系统中，一个方位被定义为一个heading角,一个 pitch 角，和一个 bank 角。<strong>它的基本思想是让物体开始于“标准” 方位一就是物体坐标轴和惯性坐标轴对齐。</strong>在标准方位上，让物体作 heading、pitch、bank 旋转，最后物体到达我们想要描述的方位。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231108103715241.png" alt="image-20231108103715241"></p><h4 id="别名问题"><a href="#别名问题" class="headerlink" title="别名问题"></a>别名问题</h4><p>第一个问题是对于一个给定方位，存在多个欧拉角可以描述它。这称作别名问题，</p><p>第二种更加麻烦的别名问题是由三个角度不互独立而导致的例如pitch 135 度等价于 heading 180，pitch 45°，然后 bank 180。为了保证任意方位都只有独一无二的表示，必须限制角度的范围。</p><p>一种常用的技术是将 heading 和 bank 限制在+180到-180之间，pitch 限制在+90到-90之间。这就建立了欧拉角的一个“限制范围”。对于任意方位，仅存在一个限制欧拉角能代表这个方位(事实上，还有一个违反性的现象需要处理，马上就要讲到)。<br>在我们的代码中，几乎所有以欧拉角为参数的函数都运作在任意欧拉角范围内。但当我们编写代码计算或返回欧拉角时，必须使用限制欧拉角。限制欧拉角简化了许多基本测试，如“我现在是朝向东吗?”</p><p>欧拉角著名的别名问题是这样的:先 heading 5 再 pitch 90这与先 pitch 90再 bank 45 是等价的事实上，一旦选择土90°为 pitch 角，就被限制在只能绕直轴旋转。这种现象，角度为90的第二次旋转使得第一次和第三次旋转的旋转轴相同，称作万向锁。为了消除限制欧拉角的这种别名现象，规定万向锁情况下由 heading 完成绕竖直轴的全部旋转。换句话说，在限制欧拉角中，如果 pitch 为90，则 bank为零。</p><h4 id="插值问题"><a href="#插值问题" class="headerlink" title="插值问题"></a>插值问题</h4><p><a href="https://zhuanlan.zhihu.com/p/110754637">一篇文章为你讲透双线性插值 - 知乎 (zhihu.com)</a></p><p><a href="https://www.bilibili.com/video/BV1j44y1L7Vo/?spm_id_from=333.337.search-card.all.click&vd_source=2fbde4d9fd3ebcd623ec9f27a568939c">图像处理-双线性插值_哔哩哔哩_bilibili</a></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109161813050.png" alt="image-20231109161813050"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109161828628.png" alt="image-20231109161828628"></p><h4 id="万向锁总结"><a href="#万向锁总结" class="headerlink" title="万向锁总结"></a>万向锁总结</h4><ol><li><strong>无论是动态还是静态欧拉角视角，都存在万向锁问题。</strong><a href="https://zhuanlan.zhihu.com/p/474447990">动态与静态欧拉角视角下的万向节死锁（Gimbal Lock）问题 - 知乎 (zhihu.com)</a></li><li>三维空间中围绕三个正交轴旋转的组合就可实现任意轴旋转（欧拉证明欧拉证明了角位移序列等于单个角位移。）</li><li>“万向”是通过<strong>底层的旋转矩阵</strong>来完成的，绕轴矩阵执行顺序是xyz（绕x轴旋转的矩阵）。所以，一个欧拉角的“变换“是<strong>在给定欧拉角的三个变换参数和矩阵执行顺序后将初始姿态变为最终姿态</strong>。没有”转动“这样的结果。</li><li>欧拉角运算过程：Q&#x3D;heading( )-pitch( )-bank ( ) 这是每一次旋转的结果都基于当前姿态情况，是对一个完整的拉角变换的独立描述。多个欧拉角运算也是从初始状态（物体坐标系对准惯性坐标系），旋转x&#x3D;10会得到了10个“相对于初始姿态”的结果姿态。</li><li>假如物体坐标轴先与惯性或世界的坐标轴对齐，当物体坐标矩阵M乘上x，相当于绕世界坐标系x旋转，物体坐标系会随之移动；当第二次绕y时，实际是绕物体坐标轴的y轴移动，z轴同理。（一个世界x轴参数，两个自身轴参数，因为旋转变换不满足交换律，从而具有父子关系）</li><li>当y为pi&#x2F;2 或+pi 时，z轴与x轴共线。虽然有父子关系，但z轴的变化相当于绕世界x轴的变化，又因为旋转矩阵执行顺序x轴的在先，所以x轴可以考虑z轴的变化，增加绕 x矩阵数值完成z矩阵该有的工作，也就是丢掉了’绕你想的那个轴’所带来的功能. 这也是’锁’的概念, 即, 将’你想的那个轴’所能带来的那个功能或<strong>自由度</strong>给’锁’住了.</li><li>而我们大多数人认知出现误差，是因为我们时刻都在拿当前变换后的坐标系作为参考，所以无论变哪个轴，另外两个轴就会跟着变，但实际上不是的，欧拉角只要指定变换顺序，那么轴的影响就是唯一的..y轴不能对x轴产生影响是指x轴由于始终在y轴前变换，<strong>所以x轴的变换始终锚定的是初始状态的x轴，不是经过y轴变换后的x轴</strong></li><li>欧拉角描述相对于初始状态的变换，只和最终状态有关，与过程无关。</li><li><strong>现象相当于“框架自锁”，本质还是是同一旋转，欧拉角表示不唯一。旋转变换不满足交换律，每一次旋转的结果都基于初始姿态情况。</strong>（初始还是当前）</li></ol><h4 id="参考想法"><a href="#参考想法" class="headerlink" title="参考想法"></a>参考想法</h4><p>万向节死锁产生的本质在于旋转矩阵变换的不是坐标系中的点，而变换的是坐标系本身</p><p>世界轴和四元数等价吧</p><p>变换:传送回城，转动:走路回家</p><p>我是否可以理解为欧拉角的变换其实是一个计算过程而非运动过程，正因如此在从运动的角度理解时出现了反直觉的现象？而造成的原因是语言描述数学的缺陷？</p><p><strong>关键就是旋转变换不满足交换律，每一次旋转的结果都基于当前姿态情况。</strong><br><strong>初学者接触欧拉角描述很容易拿去跟直角坐标位置描述去对比，就很容易陷入思维误区。</strong></p><p><strong>初始–》A</strong><br><strong>初始–》B</strong><br><strong>而使用者往往会用作</strong><br><strong>初始–》A–》B</strong><br><strong>相当于方法错了。</strong></p><p>代码里会重新设置变换为单位矩阵</p><p>也就是说，写成程序的话，应该按照步进单位实时更新当前坐标轴，否则任何看似后续进行的操作，都是在初始坐标轴的基础上进行变换的。这么说来也能理解为什么实际物体模型会出现这样的现象了：原因在于控制x，y，z三个轴角度的圆环，其内外顺序可以不同，同时半径大的控制环始终可以带动半径小的控制环，反过来却不行。毕竟理想情况是三个轴的控制环半径相同，而现实世界的物理规则不允许这样的物体出现，所以模拟存在缺陷，也就是“万向死锁”。</p><p>直接用轴角或者四元数就没这么多问题了</p><p>因为计算机显示三维物体是这样的，模型自身的顶点数据都是用本地坐标系描述的，不会变化。渲染的时候按照固定顺序进行缩放、旋转、平移的变换，将物体摆放在世界坐标系下的预期位置，计算出对应的RTS矩阵，再乘上摄像机的透视变换矩阵，最后GPU并行地对每个顶点乘以矩阵，得到它们在屏幕上的二维坐标。每一帧都是对每个顶点从模型的本地坐标系开始重复上述操作，没有状态，不像现实物体那样真的可以基于上一次旋转的结果再决定下一次旋转。因此当试图直接用欧拉角来插值的时候就会遇到死锁。</p><p>能唯一无奇异描述刚体的姿态只能在SO（3）域上描述，或者叫3×3维的旋转矩阵，因此需要9个参数。 任何试图减少参数的方法来表述姿态，都会发生奇异现象。<br>3个参数的欧拉角，4个参数的四元数，3个参数的修正罗格里格斯，都是会出现问题的，只是它们的奇异点各不相同。<br>最本质的原因是信息丢失，3或4个参数无法无奇异映射9个参数，总会出问题。</p><p>总结：给相对自己的坐标系，传入了相对世界的绝对坐标系参数，所以执行之后的结果不如预期。</p><p>四元数实际上是归一化过的轴角，</p><p>静态欧拉角是指在惯性坐标系下表示旋转的方式，惯性坐标系是固定不变。动态欧拉角是指在自身坐标系下表示旋转的方式，而自身坐标系是会随着物体自身的旋转而改变的。因此在使用动态欧拉角描述旋转的时候，我们会事先定义好旋转轴顺序，也就是视频里的嵌套。所以会发生子类坐标轴旋转后与父类坐标轴重合，导致缺失一个自由度，也就是万向锁现象。</p><p><strong>转动</strong>  给人错觉运动错觉，欧拉角描述完整的一个变换</p><p>我理解你说的’预期’不是’绕的其他轴’,而是丢掉了’绕你想的那个轴’所带来的功能. 这也是’锁’的概念, 即, 将’你想的那个轴’所能带来的那个功能或自由度给’锁’住了.</p><p>为什么叫”失去了一个轴”？我理解成”节省了一个轴”也没问题啊？”失去了一个轴”并不影响我改变手机的姿态啊，手机依然可以被我摆成任何姿态</p><p><a href="https://zhuanlan.zhihu.com/p/346718090">欧拉角与万向锁的理解 - 知乎 (zhihu.com)</a></p><p><a href="https://www.zhihu.com/question/433208062">(62 条消息) 关于欧拉角万向锁一直搞不明白万向锁为啥会形成？ - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/474447990">动态与静态欧拉角视角下的万向节死锁（Gimbal Lock）问题 - 知乎 (zhihu.com)</a></p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107235321563.png" alt="image-20231107235321563" style="zoom:67%;" />  <img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107230520337.png" alt="image-20231107230520337" style="zoom:67%;" /><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231107230555413.png" alt="image-20231107230555413" style="zoom: 67%;" /><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109155901971.png" alt="image-20231109155901971" style="zoom:67%;" /><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231109155514375.png" alt="image-20231109155514375" style="zoom: 67%;" />]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>行列式的几何意义</title>
    <link href="/2023/11/07/%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E5%87%A0%E4%BD%95%E6%84%8F%E4%B9%89/"/>
    <url>/2023/11/07/%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E5%87%A0%E4%BD%95%E6%84%8F%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<p>原文链接：<a href="https://www.cnblogs.com/AndyJee/p/3491487.html#4291028">【线性代数的几何意义】行列式的几何意义 - AndyJee - 博客园 (cnblogs.com)</a></p><h1 id="三、行列式的几何意义："><a href="#三、行列式的几何意义：" class="headerlink" title="三、行列式的几何意义："></a>三、行列式的几何意义：</h1><p><strong>行列式的定义：</strong></p><p>行列式是由一些数据排列成的方阵经过规定的计算方法而得到的一个数。当然，如果行列式中含有未知数，那么行列式就是一个多项式。它本质上代表一个数值，这点请与矩阵区别开来。矩阵只是一个数表，行列式还要对这个数表按照规则进一步计算,最终得到一个实数、复数或者多项式。</p><p>一阶行列式</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221217-789f015bfd19406482935bc1384b9111.png" alt="img">（注意不是绝对值）</p><p>二阶行列式</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221220-2cb65b89f54f4d41ac20625a6f04ff96.png" alt="img"></p><p>三阶行列式</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221223-9495bca891c845128392344653056d64.png" alt="img"></p><p>N阶行列式</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221251-568454b194bf46dbb2327ff76999b4f5.png" alt="img"></p><p>行列式的几何意义是什么呢？</p><p>概括说来有两个解释：</p><p>一个解释是行列式就是行列式中的行或列向量所构成的超平行多面体的有向面积或有向体积；</p><p>另一个解释是矩阵A的行列式detA就是线性变换A下的图形面积或体积的伸缩因子。</p><p>这两个几何解释一个是静态的体积概念，一个是动态的变换比例概念。但具有相同的几何本质，因为矩阵A表示的（矩阵向量所构成的）几何图形相对于单位矩阵E的所表示的单位面积或体积（即正方形或正方体或超立方体的容积等于1）的几何图形而言，伸缩因子本身就是矩阵矩阵A表示的几何图形的面积或体积，也就是矩阵A的行列式。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221348-d1351d8338034b089bbed2b1c8059564.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221413-3140c3fd00c34cde81e1563a87e8f887.png" alt="img"></p><p><strong>二阶行列式的几何意义：</strong></p><p>二阶行列式<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221414-7ea8a26745fc413dafbb905fa8e7aa49.png" alt="img">的几何意义是xoy平面上以行向量<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221427-61dde08cdbb54576912b46305d667aed.png" alt="img">为邻边的平行四边形的有向面积。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221436-46d5a61553b1456da9ace01a92365572.png" alt="img"></p><p>二阶行列式的几何意义就是由行列式的向量所张成的平行四边形的面积。另外，两个向量的叉积也是这个公式。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221439-94f0418650444f0393563c3dbbb0e21f.png" alt="img"></p><p>二阶行列式的另一个意义就是是两个行向量或列向量的叉积的数值，这个数值是z轴上（在二维平面上，z轴的正向想象为指向读者的方向）的叉积分量。如果数值是正值，则与z坐标同向；负值就与z坐标反向。如果我们不强调叉积是第三维的向量，也就是忽略单位向量<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221440-d3adf83a7f114d18b92eb5933545c860.png" alt="img">，那么二阶行列式就与两个向量的叉积完全等价了。</p><p><strong>二阶行列式性质的几何解释：</strong></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221443-34fc780202484a70aec08958e96f2c02.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221445-ef594fbef3e04f748a4aa4e0d56a7c84.png" alt="img"><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221446-81c86f29a89f435992e16c7fdd9ab8d4.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221453-ffb4a25d9ad54242b5ffd1d1c1869796.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221505-ba250f80b21c4d67ad1ca532da28fa17.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221510-5796c4536e644326bc5827fd18725ff5.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221513-e3097d8a9d8245279162136ac5a68bb2.png" alt="img"></p><p>两向量在同一条直线上，显然围成的四边形的面积为零，因此行列式为零</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221519-fccfd8a5754d4fb786592ebddd1073fd.png" alt="img"></p><p>这个性质由行列式的叉积特性得到，交换行列式的两行，就是改变了向量a和向量b的叉积顺序，根据<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221520-542207a22e434234b4eb2712bb2eb6fa.png" alt="img">，因此行列式换号。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221520-706292a0ee5a49f8b579b331eec40b1b.png" alt="img"></p><p>把行列式的一行的k倍加到另一行，则行列式值不变，即<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221520-6cf6133740184013990c59943889bcbe.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221523-63d6f63fb2dd4be8965de6c73695db3c.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221527-232cdbd99faa40f4a1f4664459f2747c.png" alt="img"></p><p>矩阵的行列式等于其转置矩阵的行列式（根据行列式的定义可证）</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221528-34a10f4c4e9e43cfa973ff38a735fb05.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221529-114ac124ff844c25a23b15a32dd32c55.png" alt="img"></p><p>总结：</p><p>（1）用一个数k乘以向量a,b中之一的a，则平行四边形的面积就相应地增大了k倍；</p><p>（2）把向量a,b中的一个乘以数k之后加到另一个上，则平行四边形的面积不变；</p><p>（3）以单位向量(1，0)，(0，1)构成的平行四边形(即单位正方形)的面积为1。</p><p><strong>三阶行列式的几何意义：</strong></p><p>一个3×3阶的行列式是其行向量或列向量所张成的平行六面体的有向体积。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221536-0c07cfb04cc947d8acae4b69cdb43331.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221540-5fd024bc24174975a2e4750138bdc8a3.png" alt="img"></p><p>一个行列式可以通过拆分某一个列向量得到两个行列式的和</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221545-2cd805a1c5894b8481e50bbbbade9b48.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221546-82102c4b2b5e4e4c8b19e3bb7a13a385.png" alt="img"></p><p>行列式的有两行或者两列元素相同，它对应的空间平行六面体的两条邻边重合，相当于三维空间中六面体被压成了高度为零的二维平面，显然，这个平面的三维体积<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221547-498452e3b4e4480e9350fdbc2c714598.png" alt="img">为零。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221555-ba091fe102ff4aa3b8b4f6e87d2c75f9.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221556-e839f7b866e44a21991a0a15ad6d212a.png" alt="img"></p><p>一个行列式对应着一个数值，这个数值是对行列式中的元素经过运算得到的。这个运算是与元素的位置有关系的，因此你改变了行列式中列向量或行向量的位置当然会改变行列式的结果。幸而只改变结果的符号。一般地，一个行列式的值对应矩阵A的列向量的一个固定顺序。当detA为负值时，它确定原象的一个反射。所以，这种变换改变了原象的定向。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221557-a1043f7feb2e44a5825c86d2b1df53e3.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221600-44afd45f4d06483c8a18b135a5052e8e.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221601-196221fb81d54bf88b258996c463125a.png" alt="img"></p><p>这就是说，平行六面体的体积的k倍等于六面体的三条棱中一条棱长的k倍。这是显然的。因为立方体的体积增大可以沿着立方体某一棱方向增大相同的倍数。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221602-eb60a6278ec44e049dd8f9ecaa255502.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221603-5f368b166f684b0d951c0d5c5c917dc2.png" alt="img"></p><p>此性质表述了以<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221603-ccb0d7a9ca6449f09c6d21c738d7dc59.png" alt="img">为底面积的平行六面体在a方向上进行了切向变换，变换的后的六面体因为底面积不变，高也不变，因此体积不变。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221604-a801d162eaa34d6d802011df346dd7c0.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221605-643ece6a14624900b733f92ec1d47fdb.png" alt="img"></p><p>矩阵A的行列式等于矩阵A转置的行列式</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221608-c92bdc235f9843c591f9a774776bbdd4.png" alt="img"></p><p><strong>行列式化为对角形的几何解释：</strong></p><p>一个行列式的第i行加上j行的K倍，可以使第i行的某一个元素变为0，而这个行列式的值不变。这个性质在化简行列式时非常有用。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221609-aa520380aca04ff798a51181a9da4d5f.png" alt="img"></p><p>一个二阶行列式所表示的平行四边形被变成了一个对角行列式所表示的正（长）方形。</p><p>三阶行列式有类似的变换情形，对角化的过程会把一个平行六面体变化为一个等体积的立方体或长方体。</p><p>那么n阶行列式我们亦不怀疑的认为也可以被表示成一个n维的长方体的几何图形。</p><p><strong>二阶行列式乘积项的几何意义：</strong></p><p>对于二阶行列式而言，既然二阶行列式的几何图形是一个有方向的面积，那么从二阶行列式公理化定义<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221609-b0b70418050a4f57827adbf0fea5342a.png" alt="img">−看，又是如何构成这个面积的呢？显然，式中<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221610-ba537b74234140858a39e4e9d2883b9f.png" alt="img">项和<img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221611-ccc53caf6d4f466ca1fd339d5fc768c3.png" alt="img">项的和构成了这个面积。（面积方向的确定：叉积的右手定则）</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221617-6328e51052044344ad27566dba959f6d.png" alt="img"></p><p><strong>三阶行列式乘积项的几何意义：</strong></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221619-acea19577cbd40749a4cbef24681a48d.png" alt="img"></p><p>与二阶行列式的乘积项的几何解释类似，三阶行列式的乘积项，可以看成具有有方向的小长方体的体积。也就是说，在三阶方阵张成的三维平行六面体可以分解为一个个由各座标分量混合积构成的小长方体。这些小长方体共有六块，其体积具有方向。</p><p><strong>n阶行列式乘积项的几何意义：</strong></p><p>N阶行列式的超平行多面体的几何图形是由行(或列)向量张成的，而且这个n维超平行多面体与一个n维超长方体等体积。</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221624-64c266e3e88848209e3b819c1c4ecd53.png" alt="img"></p><p>比如一个二阶行列式可以分拆成两个这样的二阶对角行列式：</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221626-9474431858f942569b6986a3caa430db.png" alt="img"></p><p>一个三阶行列式可以拆分成六个（其余的行列式值等于零）三阶对角行列式：</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221629-c67dc13d3b254918831a064947ad9c35.png" alt="img"></p><p>一个行列式的整体几何意义是有向线段（一阶行列式）或有向面积（二阶行列式）或有向体积（三阶行列式及以上）。</p><p>因此，行列式最基本的几何意义是由各个坐标轴上的有向线段所围起来的所有有向面积或有向体积的累加和。这个累加要注意每个面积或体积的方向或符号，方向相同的要加，方向相反的要减，因而，这个累加的和是代数和。</p><p><strong>克莱姆法则的几何意义：</strong></p><p>1750年，瑞士的克莱姆发现了用行列式求解现行方程组的克莱姆（Cramer）法则。这个法则在表述上简洁自然，思想深刻，包含了对多重行列式的计算，是对行列式与线性方程组之间关系的深刻理解。如果我们不能从几何上解释这个法则，就不可能领会向量、行列式和线性方程组之间的真正关系。</p><p><strong>二阶克莱姆法则的几何解释：</strong></p><p><strong>二阶线性方程组：</strong></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221631-9664ed6b6e7a4e29856458a135c33021.png" alt="img"></p><p><strong>其克莱姆法则的解：</strong></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221632-802325b452184b1e893fbaa78184b006.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221653-4d7afb8f1fb2479a9827ae7514e7f7dd.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221658-9cb7f9ed28514a309614f0f706af7863.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221658-0ebf8b7519434fcda4ce3b07b1ac6117.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221659-5ef769c18bab4bfa828903f3ed152985.png" alt="img"></p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221701-1ec3651a7f5641f59f5b1756c13d6730.png" alt="img"></p><p><strong>三阶克莱姆法则的几何解释：</strong></p><p>三阶线性方程组如下：</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221705-761a4450fbca4629a832ec02c54611cd.png" alt="img"></p><p>其克莱姆法则的解：</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/25221705-253348aee112464e8217fc7f91ab53b5.png" alt="img"></p><p>过程与二阶类似，参考二阶的推导过程。</p><p>克莱姆法则的意义是可以用方程组的系数和常数项的行列式把方程组的解简洁的表达出来。但在实际工程应用中由于计算量较大，常常采用高斯消元法来解大型的线性方程组。</p>]]></content>
    
    
    
    <tags>
      
      <tag>几何意义</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git使用</title>
    <link href="/2023/11/06/git%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/11/06/git%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/898732792973664">从远程库克隆 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p><p>本地创建仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> learngit</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> learngit</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">pwd</span></span><br>/Users/michael/learngit<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">$ git <span class="hljs-keyword">init</span><br><span class="hljs-type">Initialized</span> empty <span class="hljs-type">Git</span> repository <span class="hljs-keyword">in</span> <span class="hljs-regexp">/Users/</span>michael<span class="hljs-regexp">/learngit/</span>.git<span class="hljs-operator">/</span><br><br></code></pre></td></tr></table></figure><p>添加文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">$ git <span class="hljs-built_in">add</span> readme.txt<br></code></pre></td></tr></table></figure><p>提交</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>git commit -m <span class="hljs-string">&quot;wrote a readme file&quot;</span><br></code></pre></td></tr></table></figure><ol><li><code>-m</code>后面输入的是本次提交的说明，</li><li>v1 file changed&#96;：1个文件被改动；2 insertions 插入了两行内容</li></ol><h2 id="查看修改"><a href="#查看修改" class="headerlink" title="查看修改"></a>查看修改</h2><p>查看当前仓库的状态</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>git status<br></code></pre></td></tr></table></figure><p>查看当前文件区别</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> git <span class="hljs-built_in">diff</span> readme.txt <br></code></pre></td></tr></table></figure><p>日志查看</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p>命令显示从最近到最远的提交日志</p><p>加上<code>--pretty=oneline</code>参数：减少信息输出</p><h2 id="版本修改"><a href="#版本修改" class="headerlink" title="版本修改"></a>版本修改</h2><p>回退到上个版本</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard HEAD^</span><br></code></pre></td></tr></table></figure><p>只要上面的命令行窗口还没有被关掉，可以找到回退的版本（指定）</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard hash编号</span><br></code></pre></td></tr></table></figure><h2 id="工作区和缓存区"><a href="#工作区和缓存区" class="headerlink" title="工作区和缓存区"></a>工作区和缓存区</h2><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231106215204190.png" alt="image-20231106215204190"></p><h2 id="修改管理"><a href="#修改管理" class="headerlink" title="修改管理"></a>修改管理</h2><p>bug操作</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git commit</code></p><p>也就是第一次的修改被提交了，第二次的修改不会被提交。</p><p>合并后一块提交了：</p><p>第一次修改 -&gt; <code>git add</code> -&gt; 第二次修改 -&gt; <code>git add</code> -&gt; <code>git commit</code></p><h2 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h2><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">$ git checkout <span class="hljs-comment">-- readme.txt</span><br></code></pre></td></tr></table></figure><ol><li>回到最近一次<code>git commit</code>或<code>git add</code>时的状态</li><li>没有<code>--</code>，就变成了“切换到另一个分支”<code>git checkout</code>命令</li></ol><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>git reset HEAD readme.txt<br></code></pre></td></tr></table></figure><p>可以回退版本，也可以<strong>把暂存区的修改回退到工作区</strong>。当我们用<code>HEAD</code>时，表示最新的版本</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退</a>一节，不过前提是没有推送到远程库。（好像有误，趁网络不注意吗）</p><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> git <span class="hljs-built_in">rm</span> test.txt<br><span class="hljs-built_in">rm</span> <span class="hljs-string">&#x27;test.txt&#x27;</span><br><span class="hljs-variable">$</span> git commit <span class="hljs-literal">-m</span> <span class="hljs-string">&quot;remove test.txt&quot;</span><br></code></pre></td></tr></table></figure><p>移除本地文件后与远程仓库同步</p>]]></content>
    
    
    
    <tags>
      
      <tag>技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从零开始的CG</title>
    <link href="/2023/11/06/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84CG/"/>
    <url>/2023/11/06/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84CG/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/53203408">(56 条消息) 如何从零开始用openGL开发一个游戏引擎？ - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/432186236">从零开始写一个渲染器01_开篇 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/337129568">渲染学习从入门到入坟再爬出来BB几句 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/649682529">从零开始实现一个玩具版浏览器渲染引擎 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/434874992">上万字手把手教学，从零开始写软渲染器（光栅化版本） - 知乎 (zhihu.com)</a></p><p><a href="https://www.zhihu.com/question/24786878/answer/2484332048">(52 条消息) 如何开始用 C++ 写一个光栅化渲染器？ - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games101环境配置</title>
    <link href="/2023/11/05/Games101%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/11/05/Games101%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/446633542">GAMES101 作业0：小白环境配置 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/259208999">GAMES101课程环境搭建(Win10+VSCode) - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/363769672">Windows10下配置VSCode、Mingw、Cmake、Eigen、OpenCV环境（为GAMES101作业构筑Win环境） - 知乎 (zhihu.com)</a></li><li><a href="https://blog.csdn.net/bookzhan/article/details/104753855">OpenCV下载&#x2F;OpenCV国内镜像&#x2F;opencv_contrib下载-CSDN博客</a></li><li><a href="https://blog.csdn.net/qq_41277822/article/details/104018866">Windows下 OpenCV 的下载安装教程（详细）_opencv下载-CSDN博客</a></li><li></li><li></li></ol><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><h3 id="VScode方法-（2-3）"><a href="#VScode方法-（2-3）" class="headerlink" title="VScode方法  （2-3）"></a>VScode方法  （2-3）</h3><ol><li>MinGW安装时没有旋转posix版本，结果没有bin文件夹</li><li>点击configure，出来的makefile的格式选择mingw。（结果是要在Specify the generator for this project选择）</li><li>使用cmake编译Elgen时，Configure to update and display new yalues in red, Press then press Generate to generate selected build files.（未解决，直接生成）</li><li>默认安装到c盘Program File x86，应该是需要管理员权限。没有报错：CMake Error at cmake_install.cmake:41 (file):   file cannot create directory: C:&#x2F;Program Files (x86)&#x2F;Eigen3&#x2F;include&#x2F;eigen3.   Maybe need administrative privileges.</li><li><a href="https://zhuanlan.zhihu.com/p/498457909">CMake on Windows Tutorial 4 - 知乎 (zhihu.com)</a></li><li><a href="https://code.visualstudio.com/docs/cpp/cmake-linux">Get started with CMake Tools on Linux (visualstudio.com)</a></li></ol><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/%E5%86%99%E5%85%A5%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%A4%B1%E8%B4%A5.png"></p><ol><li><p><strong>使用cmake编译eigen报错</strong>CMake Warning (dev) at unsupported&#x2F;test&#x2F;CMakeLists.txt:293 (find_package):   Policy CMP0146 is not set: The FindCUDA module is removed.  Run “cmake   –help-policy <strong>CMP0146</strong>“ for policy details.  Use the cmake_policy command to   set th</p></li><li><p>fatal error: Eigen&#x2F;Eigen: No such file or directory  #include &lt;Eigen&#x2F;Eigen&gt;</p></li><li><p>cmd命令无法识别mingw32</p></li><li><p><a href="https://blog.csdn.net/qq_43382350/article/details/105840862">MinGW安装教程（make安装教程）解决cmd中make不是内部命令的问题_mingw make-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/Xu_Huitong/article/details/129309798">解决方法：window下make无法识别，同时缺少mingw32-make.exe文件-CSDN博客</a></p></li><li><p><a href="https://blog.csdn.net/qq_34414144/article/details/124822846">mingw安装说明_无法将“mingw32-make”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。请-CSDN博客</a></p></li><li><p>“”在build目录下输入mingw32-make进行make，然后输入mingw32-make install进行安装。eigen会自动安装到“C:\Program Files (x86)\Eigen3”，去这里确认一下，如果安装成功，就可以删掉刚才的一系列文件了。“”</p><p><strong>安装失败</strong></p></li><li><p>放弃</p></li></ol><h3 id="官方虚拟机方法"><a href="#官方虚拟机方法" class="headerlink" title="官方虚拟机方法"></a>官方虚拟机方法</h3><ol><li>共享文件夹设置为固定时有bug，恢复不行，结果是找不到共享文件夹</li><li>只设置自动挂载会有权限设置，全部文件都需要密码</li><li>vscode加载不开？</li><li>有时拖动方式传递文件不行，传递成功也只是传递了文件夹，内容没有传递</li><li><strong>vscode的debug使用g++方式失败，总是跳转到配置文件</strong></li></ol><h3 id="VS方法-1"><a href="#VS方法-1" class="headerlink" title="VS方法 (1)"></a>VS方法 (1)</h3><ol><li>找不到作业的解决方案，也不知道是解决方案的功能是什么，文件格式是sln</li><li>也找不到解决方案的属性页，不能配置属性VC++目录的包含目录</li><li>不会设置启动项</li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>解决方案是Visual Studio中用来组织项目的结构。它可以包含一个或多个项目文件，并提供了在开发任务之间切换和管理的能力。解决方案文件的格式是.sln，它是一个文本文件。解决方案文件中记录了解决方案的基本信息、版本信息、项目信息和全局信息等。</p><p>解决方案文件（.sln）的作用主要有：</p><ol><li><p>组织项目：解决方案文件可以将不同的项目组织在一起，方便开发人员进行整体管理。</p></li><li><p>跨平台开发：解决方案文件可以对不同平台的项目进行集成，便于跨平台开发和协同工作。</p></li><li><p>项目依赖管理：解决方案文件可以管理项目之间的依赖关系，确保项目在编译和构建过程中的顺序和正确性。</p></li><li><p>配置管理：解决方案文件可以存储和管理项目的配置信息，如编译选项、调试设置等。</p></li></ol><p>需要注意的是，解决方案文件通常不需要手动编辑，因为Visual Studio会自动修复解决方案文件。但在遇到自动解决冲突错误或编译错误时，可能需要手工修改解决方案文件来解决问题。</p><p>[C# ——项目没有.sln文件的解决办法： - vv彭 - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/eve612/p/14530258.html#:~:text=%E4%BD%86%E6%98%AF%E6%88%91%E6%96%B0%E5%BB%BA%E7%9A%84%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E6%B2%A1%E6%9C%89Sln%E6%96%87%E4%BB%B6%EF%BC%8C%E8%AF%A5%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80%E6%95%B4%E4%B8%AA%E9%A1%B9%E7%9B%AE%EF%BC%9F">https://www.cnblogs.com/eve612/p/14530258.html#:~:text=但是我新建的一个项目里面没有Sln文件，该如何打开整个项目？</a> 解决办法：,打开VS%2C点击新建项目，同时会生成一个解决方法，然后往这个解决方案里面添加现有项目，注意添加的是.csproj文件。 把全部项目添加进去之后，另存为整个解决方案，就会保存为.sln格式的文件。 再打开这个文件就可以加载整个项目了。)</p><p><a href="https://blog.csdn.net/maxle/article/details/125508072">未加载visual c++项目、项目选项下没有属性_vs没有项目属性_编程图一乐的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/tonglin12138/article/details/95971900#:~:text=%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%9A1.%E7%82%B9,%E6%AD%A5%E5%B0%B1%E5%B7%B2%E7%BB%8F%E8%A7%A3%E5%86%B3%E4%BA%86%E3%80%82">VS里边无法打开属性页问题解决_vs属性页打不开-CSDN博客</a></p><p><a href="https://blog.csdn.net/cjmqas/article/details/79282847">Visual Studio开源库集成器Vcpkg全教程–利用Vcpkg轻松集成开源第三方库_vckfgb-CSDN博客</a></p><p><strong>创建新的解决方案后填充文件</strong></p><p><strong>配置启动项</strong></p><h2 id="放弃了"><a href="#放弃了" class="headerlink" title="放弃了"></a>放弃了</h2>]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CG资料导航</title>
    <link href="/2023/11/05/CG%E8%B5%84%E6%96%99%E5%AF%BC%E8%88%AA/"/>
    <url>/2023/11/05/CG%E8%B5%84%E6%96%99%E5%AF%BC%E8%88%AA/</url>
    
    <content type="html"><![CDATA[<h2 id="导航工具链接"><a href="#导航工具链接" class="headerlink" title="导航工具链接"></a>导航工具链接</h2><p><a href="https://zhuanlan.zhihu.com/p/84550677">总结一些TA（技术美术）学习的网站 - 知乎 (zhihu.com)</a></p><p><a href="https://www.zhihu.com/question/349302834/answer/931378785">(54 条消息) 计算机图形学应该从什么开始学习？ - 知乎 (zhihu.com)</a></p><h3 id="在线shader编辑"><a href="#在线shader编辑" class="headerlink" title="在线shader编辑"></a>在线shader编辑</h3><ol><li><a href="https://www.shadertoy.com/">Shadertoy BETA</a></li><li><a href="https://glslsandbox.com/">GLSL Sandbox Gallery</a></li></ol><h3 id="raymarching学习"><a href="#raymarching学习" class="headerlink" title="raymarching学习"></a>raymarching学习</h3><ol><li><a href="https://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/#signed-distance-functions">Ray Marching and Signed Distance Functions (jamie-wong.com)</a></li><li><a href="https://iquilezles.org/articles/">Inigo Quilez :: computer graphics, mathematics, shaders, fractals, demoscene and more (iquilezles.org)</a></li></ol><h3 id="GPU编程"><a href="#GPU编程" class="headerlink" title="GPU编程"></a>GPU编程</h3><ol><li>[Game-Programmer-Study-Notes&#x2F;Content&#x2F;《GPU Gems 1》全书提炼总结 at master · QianMo&#x2F;Game-Programmer-Study-Notes (github.com)](<a href="https://github.com/QianMo/Game-Programmer-Study-Notes/tree/master/Content/%E3%80%8AGPU">https://github.com/QianMo/Game-Programmer-Study-Notes/tree/master/Content/《GPU</a> Gems 1》全书提炼总结)</li><li></li></ol><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ol><li><a href="https://www.patreon.com/minionsart">www.patreon.com</a></li><li><a href="https://twitter.com/hashtag/Shaders?src=hash">twitter.com</a></li><li><a href="https://zhuanlan.zhihu.com/p/27339998">简述47种Shader Map的渲染原理与制作方法 - 知乎 (zhihu.com)</a></li><li><a href="https://www.jordanstevenstechart.com/physically-based-rendering">Physically Based Rendering Algorithms In Unity - Jordan Stevens (jordanstevenstechart.com)</a><strong>PBR里面最全的光照模型总结</strong></li><li><a href="https://unitylist.com/browse?f=effects">unitylist.com | 521: Web server is down</a><strong>一些unity效果的制作</strong></li><li><a href="https://forum.unity.com/forums/shaders.16/">Shaders - Unity Forum</a></li><li><a href="https://blog.csdn.net/wangdingqiaoit/article/details/51457675">OpenGL学习脚印: 二维纹理映射(2D textures)_opengl texture2d函数-CSDN博客</a><strong>二维纹理映射</strong></li><li><strong>丝绸效果相关的网站和ppt</strong></li><li><a href="https://www.slideshare.net/jalnaga/custom-fabric-shader-for-unreal-engine-4">https://www.slideshare.net/jalnaga/custom-fabric-shader-for-unreal-engine-4</a></li><li><a href="https://www.artstation.com/artwork/9DoRq">https://www.artstation.com/artwork/9DoRq</a></li><li><a href="https://xbdev.net/directx3dx/specialX/Fur/">Generating Fur in DirectX or OpenGL Easily - Tutorials made easy! (xbdev.net)</a></li><li><a href="http://walkingfat.com/">WalkingFat – 行尸走油肉的笔记</a>实用笔记</li><li><a href="https://blog.csdn.net/v_xchen_v/article/details/79474193#shader%E4%B8%AD%E5%AF%B9cubemap%E9%87%87%E6%A0%B7">【Unity Shader】 CubeMap（立方体贴图）-CSDN博客</a> </li><li><a href="https://www.cnblogs.com/rainstorm/archive/2013/05/04/3057444.html">HLSL学习笔记（一）：基础 - snet - 博客园 (cnblogs.com)</a> </li><li><a href="https://github.com/EpicGames">Epic Games (github.com)</a></li><li><a href="http://www.iryoku.com/">Jorge Jimenez (iryoku.com)</a><strong>GDC和SIGGRAPH上的ppt或者paper</strong></li><li><a href="http://docs.autodesk.com/errors/404.htm">The Page You Were Looking for Was Not Found (autodesk.com)</a><strong>.MAXScript</strong></li><li><a href="http://www.scriptspot.com/">ScriptSpot | Your community resource for 3ds Max tools</a></li><li><a href="https://forums.cgsociety.org/c/autodesk/3dsmax-sdk-and-maxscript">CGTalk | 3ds Max SDK and MaxScript (cgsociety.org)</a></li><li><a href="https://www.cnblogs.com/topameng/p/6761542.html">【原】Unity Shader VS UDK Material Editor - 阿蒙1024 - 博客园 (cnblogs.com)</a></li><li><a href="https://www.cnblogs.com/kex1n/p/3663533.html">Photoshop图层混合模式计算公式大全（转） - 小 楼 一 夜 听 春 雨 - 博客园 (cnblogs.com)</a></li><li></li></ol><h2 id="大佬推荐"><a href="#大佬推荐" class="headerlink" title="大佬推荐"></a>大佬推荐</h2><ol><li><a href="https://space.bilibili.com/929884/video">SilenceMoon投稿视频-SilenceMoon视频分享-哔哩哔哩视频 (bilibili.com)</a></li><li><a href="https://space.bilibili.com/4435618/channel/series">Kerry佬视频专辑-Kerry佬视频合集-哔哩哔哩视频 (bilibili.com)</a></li><li><a href="https://space.bilibili.com/512313464/?spm_id_from=333.999.0.0">GAMES-Webinar的个人空间-GAMES-Webinar个人主页-哔哩哔哩视频 (bilibili.com)</a></li><li><a href="https://space.bilibili.com/7398208/?spm_id_from=333.999.0.0">霜狼_may的个人空间-霜狼_may个人主页-哔哩哔哩视频 (bilibili.com)</a></li><li><a href="https://www.zhihu.com/people/fjz13">(52 条消息) 大钊 - 知乎 (zhihu.com)</a> ue源码剖析</li><li><a href="https://www.zhihu.com/people/SuperPandaGX/posts">(54 条消息) YivanLee - 知乎 (zhihu.com)</a>  ue教程</li><li><a href="https://www.zhihu.com/people/freddy-hu/posts">(54 条消息) FreddyHu - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/people/huang-yu-qi-43-54/posts">(54 条消息) 宇亓 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/people/zhong-xie-wei-32/posts">(72 条消息) grassofsky - 知乎 (zhihu.com)</a> 医学</li><li><a href="https://www.zhihu.com/people/cheng-xu-yuan-10/posts">(1 封私信 &#x2F; 74 条消息) 计算机视觉life - 知乎 (zhihu.com)</a> 三维重建</li><li><a href="https://space.bilibili.com/303980573/channel/series">星群译制组视频专辑-星群译制组视频合集-哔哩哔哩视频 (bilibili.com)</a>  几分钟论文</li><li><a href="https://www.zhihu.com/people/netwarm007/posts">(1 封私信 &#x2F; 74 条消息) 文礼 - 知乎 (zhihu.com)</a> 从零开始次世代游戏引擎</li><li><a href="https://www.zhihu.com/people/bai-jun-xuan/posts">(1 封私信 &#x2F; 74 条消息) 黑发特兰克斯 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/people/155166/posts">(1 封私信 &#x2F; 74 条消息) 雪比蓝 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/people/star-45-40/posts">(1 封私信 &#x2F; 74 条消息) Unreal Jz - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/people/cromputer/posts">(1 封私信 &#x2F; 74 条消息) CRomputer罗老师 - 知乎 (zhihu.com)</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzUxMDM3MTYwNQ==&mid=2247487026&idx=1&sn=442efa67e68f323aaa2e2077f80ecce9&chksm=f902bc48ce75355ed8fd99975c1964c3e38455ad6ba36086be7e8cb6ea2797e973b05cafda85&token=813597042&lang=zh_CN&scene=21#wechat_redirect">Unity3D游戏开发中100+效果的实现和源码大全 - 收藏起来肯定用得着 (qq.com)</a></li><li><a href="https://www.zhihu.com/people/bosha666/posts">(1 封私信 &#x2F; 74 条消息) 柏莎 - 知乎 (zhihu.com)</a></li><li></li></ol><h2 id="博客推荐"><a href="#博客推荐" class="headerlink" title="博客推荐"></a>博客推荐</h2><ol><li><a href="https://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/#signed-distance-functions">射线行进和符号距离函数 (jamie-wong.com)</a></li><li><a href="https://blog.csdn.net/candycat1992/article/details/44244549">【ShaderToy】基础篇之谈谈点、线的绘制_v2f_position和gl_frag-CSDN博客</a></li><li><a href="https://advances.realtimerendering.com/">Advances in Real-Time Rendering in 3D Graphics and Games (realtimerendering.com)</a>   <strong>SIGGRAPH</strong></li></ol><h2 id="实验室"><a href="#实验室" class="headerlink" title="实验室"></a>实验室</h2><ol><li><a href="http://dalab.se.sjtu.edu.cn/www/home/?page_id=33">中文版 | Digital ART Laboratory of Shanghai Jiao Tong University (sjtu.edu.cn)</a></li><li><a href="http://irc.cs.sdu.edu.cn/sduvr/index.htm">首页-山东大学交叉研究中心 (sdu.edu.cn)</a></li><li><a href="https://vcc.szu.edu.cn/education.html">VCC (szu.edu.cn)</a></li><li><a href="http://gcl.ustc.edu.cn/">Graphics&amp;Geometric Computing Laboratory (GCL) (ustc.edu.cn)</a></li><li><a href="https://cg.cs.tsinghua.edu.cn/">Graphics &amp; Geometric Computing Group | CS, Tsinghua Univ.</a></li><li><a href="https://www.icst.pku.edu.cn/GraphicsLab/yjly/index.htm">WICT GraphicsLab - 研究领域 (pku.edu.cn)</a></li><li><a href="http://graphics.xmu.edu.cn/lab/">厦门大学图形学实验室 (xmu.edu.cn)</a></li><li><a href="https://www.graphics.pku.edu.cn/index.htm">北京大学图形与交互技术实验室 (pku.edu.cn)</a></li><li></li></ol><h2 id="UE"><a href="#UE" class="headerlink" title="UE"></a>UE</h2><ol><li><a href="https://space.bilibili.com/443124242/channel/series">某科学的_半个人视频专辑-某科学的_半个人视频合集-哔哩哔哩视频 (bilibili.com)</a></li><li>[<a href="https://www.bilibili.com/video/BV1LE411Y79r/?spm_id_from=333.788.recommend_more_video.0&vd_source=04b2fa494e0bf53b9de59e6ebabecc32">UE官方中文直播]贾越-Niagara基础1 | 第7期_哔哩哔哩_bilibili</a></li><li><a href="https://space.bilibili.com/1879281116/channel/series">墨化科技视频专辑-墨化科技视频合集-哔哩哔哩视频 (bilibili.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/36675543">虚幻4渲染编程专题概述及目录 - 知乎 (zhihu.com)</a></li><li><a href="https://docs.unrealengine.com/5.3/zh-CN/unreal-engine-materials/">虚幻引擎材质 | 虚幻引擎5.3文档 (unrealengine.com)</a></li><li><a href="https://github.com/EpicGames">Epic Games (github.com)</a></li><li></li></ol><h2 id="CG"><a href="#CG" class="headerlink" title="CG"></a>CG</h2><ol><li><a href="https://www.zhihu.com/question/24786878/answer/2484332048">(52 条消息) 如何开始用 C++ 写一个光栅化渲染器？ - 知乎 (zhihu.com)</a></li><li><a href="https://space.bilibili.com/1255445577/favlist?fid=548486&ftype=collect&ctype=21">超级喵世界的个人空间-超级喵世界个人主页-哔哩哔哩视频 (bilibili.com)</a></li><li></li></ol><h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><ol><li><a href="https://www.magesbox.com/">魔法盒-专业的游戏特效学习、分享、灵感捕获的cg网站 (magesbox.com)</a></li><li><a href="https://community.uwa4d.com/">UWA-社区 (uwa4d.com)</a></li></ol><h2 id="渲染参考"><a href="#渲染参考" class="headerlink" title="渲染参考"></a>渲染参考</h2><ol><li><a href="https://space.bilibili.com/11831050?spm_id_from=333.999.0.0">RedialC的个人空间-RedialC个人主页-哔哩哔哩视频 (bilibili.com)</a> mmd</li><li><a href="https://space.bilibili.com/7059075/video">终极-女王Q-Q投稿视频-终极-女王Q-Q视频分享-哔哩哔哩视频 (bilibili.com)</a>  武器</li><li></li></ol><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="TA和特效"><a href="#TA和特效" class="headerlink" title="TA和特效"></a>TA和特效</h3><p>链接：<a href="https://zhuanlan.zhihu.com/p/84225576">https://zhuanlan.zhihu.com/p/84225576</a></p><p>链接：<a href="https://www.zhihu.com/question/462339545/answer/1927715765">https://www.zhihu.com/question/462339545/answer/1927715765</a></p><p><a href="https://www.zhihu.com/collection/931415064">(52 条消息) 特效 - 收藏夹 - 知乎 (zhihu.com)</a></p><p>如果说TA是会美术的程序员，那特效就应该是会程序的美术</p><p>技术美术主要和美术打交道，来完成图形应用层的各种优化。</p><p>什么样的特效才是美呢，可能普通玩家的理解就是够炫，这里的炫可能就是光感了，光感够强就是炫，就是好特效，可能这是初衷吧，毕竟游戏做出来是给玩家玩，特效亦是给玩家看，玩家的体验感受才是第一位。特效师要表达光感在作品中，大概有两类办法，一类就是取巧的在贴图上制造光感，并且基于add叠加模式来模拟光，这样的好处就是节省高效，坏处也显而易见，自然就是效果差，光感生硬。在一类就是依赖后期处理，用后期算法来实现泛光，这样的好处自然就是光感通透自然，在视觉上是碾压前面一种方法的，坏处也是明显的，效率基本与美感永远是敌人。光感这个是最直观的感受，当然作为一个从业人员，从专业角度上分析特效的话，形式，配色，节奏是特效在视觉展示上最基本的三大面，形式就是就是设计，是圆是方，是点是线还是面，是吸收还是释放，是火属性，还是冰属性等等设计范畴的东西，配色就是颜色的表现，有没有明暗，虚实，渐变等等这个很吃艺术功底，其实上面说的光感，我觉得可以合并在配色里，前面的解释只是想由浅到深的让人理解下特效。节奏就是特效的动画部份，是急是缓，是发力还是泄力等等。</p><p>答案是没有好地方学。因为<a href="https://www.zhihu.com/search?q=%E6%B8%B8%E6%88%8F%E7%89%B9%E6%95%88&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">游戏特效</a>是从属于特定<a href="https://www.zhihu.com/search?q=%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">游戏引擎</a>内部（或对应引擎编写插件）来实现的部分，技能上属于<a href="https://www.zhihu.com/search?q=%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8A%A8%E7%94%BB&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">计算机动画</a>专业（不是动画专业）的内容，硬说的就是准·<a href="https://www.zhihu.com/search?q=%E7%BC%96%E7%A8%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">编程</a>来实现的。属于极端小范围内的点缀小技巧，没有绝对意义上的普适性（每个游戏引擎在具体思路手法上也都有小差异）。</p><p>不过呢，在吃透CG动画工具（随便哪个主流工具）掌握<a href="https://www.zhihu.com/search?q=%E7%9D%80%E8%89%B2%E5%99%A8&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">着色器</a>编写原理之后，绝大部分的常规游戏特效都不是问题。因为相比<a href="https://www.zhihu.com/search?q=%E5%BD%B1%E8%A7%86%E7%89%B9%E6%95%88&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">影视特效</a>VFX来说，游戏特效SFX出于引擎的实时效率，还是要简化太多太多，策略上，更多是着色层视觉模拟而非复杂的<a href="https://www.zhihu.com/search?q=%E6%B7%B1%E5%BA%A6%E7%89%A9%E7%90%86%E8%AE%A1%E7%AE%97&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">深度物理计算</a>。因此，仔细阅读引擎的着色与<a href="https://www.zhihu.com/search?q=%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">动画控制</a>相关的文档，或者有针对性地和引擎<a href="https://www.zhihu.com/search?q=%E5%BC%80%E5%8F%91%E8%80%85&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:1927715765%7D">开发者</a>沟通，一般就能找到办法，并不需要什么额外的专门学习。</p><h3 id="图形学工作特点"><a href="#图形学工作特点" class="headerlink" title="图形学工作特点"></a>图形学工作特点</h3><ol><li>游戏开发基本是项目逻辑</li><li>开发大部分时间都是和bug</li><li>游戏注重实时渲染</li><li>影视特效“注重离线渲染</li><li>工业设计注重仿真</li><li>医疗注重可视化</li></ol><h3 id="材质系统-shader"><a href="#材质系统-shader" class="headerlink" title="材质系统 shader"></a>材质系统 shader</h3><ol><li><p><a href="https://www.cnblogs.com/hmscore/p/14893990.html">漫谈图形引擎中的材质系统 - HMSCore技术团队 - 博客园 (cnblogs.com)</a></p></li><li><p><a href="https://blog.uwa4d.com/archives/Study_unreal4_Rendering_2.html">虚幻引擎学习之路：渲染模块之材质系统 - UWA问答 | 博客 | 游戏及VR应用性能优化记录分享 | 侑虎科技 (uwa4d.com)</a></p></li><li></li></ol><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><ol><li><a href="https://space.bilibili.com/8581948/video">wishwizain投稿视频-wishwizain视频分享-哔哩哔哩视频 (bilibili.com)</a></li><li></li></ol><h2 id="特效素材制作"><a href="#特效素材制作" class="headerlink" title="特效素材制作"></a>特效素材制作</h2><ol><li><a href="https://search.bilibili.com/all?keyword=Jasonkeyser&from_source=webtop_search&spm_id_from=333.1007&search_source=5">Jasonkeyser-哔哩哔哩_Bilibili</a></li><li><a href="https://search.bilibili.com/all?vt=59395469&keyword=%E7%89%B9%E6%95%88%E7%B4%A0%E6%9D%90%E5%88%B6%E4%BD%9C&from_source=webtop_search&spm_id_from=333.1007&search_source=2">特效素材制作-哔哩哔哩_Bilibili</a></li></ol><h2 id="有趣专题"><a href="#有趣专题" class="headerlink" title="有趣专题"></a>有趣专题</h2><ol><li><a href="https://www.bilibili.com/video/BV19a4y17721/?spm_id_from=333.999.0.0&vd_source=2fbde4d9fd3ebcd623ec9f27a568939c">Shader编程 - 如何渲染一个黑洞？_哔哩哔哩_bilibili</a></li><li><a href="https://zhuanlan.zhihu.com/p/27344672">一道技术美术的面试题 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/column/Preacher">创造史诗的地方 - 知乎 (zhihu.com)</a>  ue免费资源</li><li><a href="https://www.zhihu.com/topic/27231409/hot">(1 封私信 &#x2F; 74 条消息) Nerf 三维重建技术 - 知乎 (zhihu.com)</a>  </li><li><a href="https://zhuanlan.zhihu.com/p/664356865">NeRF与传统三维重建技术相比的优缺点分析 - 知乎 (zhihu.com)</a></li><li>神经渲染可微渲染</li></ol><h2 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h2><p>按照我今年暑假在天美某工作室引擎组的实习经验，今年能找到鹅厂引擎这个档次实习的同学人均一个用c++实现的软光栅器+一个基于图形api的实时全局光照渲染器</p><p>人工智能目前有 数学推理，伪物理，渲染风格迁移，可微渲染，动画生成，超分辨率等方向，不推荐放弃人工智能单纯做图形，容易被降维打击。 好好搞研究，图形只是实现真正效果的一块石头罢了</p><p>《弹性力学》、《塑壮力学》、《微分几何》、《计算几何》、《计算机图形学》、《有限元法》、《优化方法》，自已还补上了《数据结构》、《离散数学》、《汇编语言》、《软件工程》、《数据库原理》</p>]]></content>
    
    
    
    <tags>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数学-markdown和latex制作数学公式</title>
    <link href="/2023/11/05/%E6%95%B0%E5%AD%A6-markdown%E5%92%8Clatex%E5%88%B6%E4%BD%9C%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <url>/2023/11/05/%E6%95%B0%E5%AD%A6-markdown%E5%92%8Clatex%E5%88%B6%E4%BD%9C%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/464237097">【LaTeX应用】常用数学公式和符号 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/261750408">Typora数学公式汇总（Markdown） - 知乎 (zhihu.com)</a></li><li><a href="https://blog.csdn.net/nuoyanli/article/details/96179976">使用Markdown写矩阵、表格和一些数学公式(实用_markdown 上三角矩阵-CSDN博客</a></li><li><a href="https://www.overleaf.com/learn/latex/List_of_Greek_letters_and_math_symbols">希腊字母和数学符号列表 - Overleaf，在线 LaTeX 编辑器</a></li></ol><h2 id="创建数学格式"><a href="#创建数学格式" class="headerlink" title="创建数学格式"></a>创建数学格式</h2><ol><li>公式块{CTRL+shift+M}</li><li>菜单-段落-公式块</li><li>在文中输入$$，再按下回车</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>在公式块中可以使用latex代码编写，可以缺少一些条件使用</li><li>latex是文本编辑，和markdown一样的，编写数学公式强大</li><li>公式块和代码块不同，公式块里的代码在代码块中不会编译后显示</li><li>公式块中的空格需要特殊格式</li><li>上标不能叠加使用</li></ol><h2 id="英文单词"><a href="#英文单词" class="headerlink" title="英文单词"></a>英文单词</h2><ol><li>brace 大括号，支持</li><li>infinity infinite 无限</li><li>division 除法，分开</li><li>\begin{aligned}  对齐 (latex)</li><li>partial 部分的，偏袒的</li></ol><h2 id="等式对齐"><a href="#等式对齐" class="headerlink" title="等式对齐"></a>等式对齐</h2><p>配置 \usepackage{amsmath}</p><p>方法</p><ol><li>\begin{equation}  \begin{split}  环境 使用 &amp; \ \</li><li>\begin{align*}  环境 使用 &amp; </li><li>长句子使用\begin{multline*}  先左对齐后右对齐</li></ol><p>$$<br>\begin{equation}<br>\begin{split}<br>A &amp; &#x3D; \frac{\pi r^2}{2} \<br> &amp; &#x3D; \frac{1}{2} \pi r^2<br>\end{split}<br>\end{equation}<br>$$</p><p>$$<br>\begin{align*}<br>x&amp;&#x3D;y           &amp;  w &amp;&#x3D;z              &amp;  a&amp;&#x3D;b+c\<br>2x&amp;&#x3D;-y         &amp;  3w&amp;&#x3D;\frac{1}{2}z   &amp;  a&amp;&#x3D;b\<br>-4 + 5x&amp;&#x3D;2+y   &amp;  w+2&amp;&#x3D;-1+w          &amp;  ab&amp;&#x3D;cb<br>\end{align*}<br>$$</p><p>$$<br>\begin{multline*}<br>p(x) &#x3D; 3x^6 + 14x^5y + 590x^4y^2 + 19x^3y^3\ </p><ul><li>12x^2y^4 - 12xy^5 + 2y^6 - a^3b^3<br>\end{multline*}<br>$$</li></ul><h2 id="加减乘除和运算符"><a href="#加减乘除和运算符" class="headerlink" title="加减乘除和运算符"></a>加减乘除和运算符</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livescript">公式<br>加减乘，直接使用符号<br>除号， <span class="hljs-string">\div&#123;b&#125;</span><br>乘号  <span class="hljs-string">\times</span><br> 小于 <span class="hljs-string">\leq</span> <span class="hljs-number">3</span>   <span class="hljs-string">\\less</span> equal<br> 大于  <span class="hljs-string">\geq</span> <br> 不等于 <span class="hljs-string">\neq</span><br> a <span class="hljs-string">\equiv</span> b <span class="hljs-string">\pmod</span> n <br></code></pre></td></tr></table></figure><p>$$<br>1 + 2 * 3 &#x3D;  7  \<br>1 \div { 100} &#x3D;  \<br>1+1 \leq 3 \<br>1+1 \geq 0 \<br>1+1 \neq 3  \tag{7} \<br>a \equiv b \pmod n<br>$$</p><h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><h2 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h2><h2 id="上下标和分式"><a href="#上下标和分式" class="headerlink" title="上下标和分式"></a>上下标和分式</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">分号  \frac</span><span class="hljs-template-variable">&#123;1&#125;</span><span class="hljs-template-variable">&#123;100&#125;</span><span class="language-xml"> </span><br><span class="language-xml">根号  \sqrt</span><span class="hljs-template-variable">&#123;16&#125;</span><span class="language-xml"> </span><br><span class="language-xml">上标  2^</span><span class="hljs-template-variable">&#123;1+1-1&#125;</span><span class="language-xml"> </span><br><span class="language-xml">xiabiao n_</span><br></code></pre></td></tr></table></figure><p>$$<br>1 \div{100} &#x3D; \frac{1}{100} \<br>2*2 &#x3D; \sqrt{16} &#x3D; 2^2 &#x3D; 4_1 &#x3D; 2^{2+1-1} \<br>  \sqrt[4]{16}&#x3D;2<br>$$</p><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">公式<br>正余余正符号同，余余正正符号反。（三角和）\\<br> \<span class="hljs-built_in">sin</span>&#123;\theta&#125; \\<br> \<span class="hljs-built_in">sin</span>&#123;(a_1+b_1)&#125;=\<span class="hljs-built_in">sin</span>&#123;(a_1)&#125;\<span class="hljs-built_in">cos</span>&#123;(b_1)&#125;+\<span class="hljs-built_in">cos</span>&#123;(a_1)&#125;\<span class="hljs-built_in">sin</span>&#123;(b_1)&#125;<br></code></pre></td></tr></table></figure><p>$$<br>正余余正符号同，余余正正符号反。（三角和）\<br> \sin{\theta} \<br> \sin{(a_1+b_1)}&#x3D;\sin{(a_1)}\cos{(b_1)}+\cos{(a_1)}\sin{(b_1)} \<br>2倍角公式 \<br> \sin{(2a)}&#x3D;2 \sin{(a)} \cdot \cos{(a)} \<br> \tan(2a)&#x3D;2\frac{\tan(a)}{1-\tan{^2(a)}} \</p><p> \cos{(2a)} &#x3D;\cos{^2(a)}-\sin^2(a) \<br> &#x3D;2\cos^2(a)-1 \<br> &#x3D;1-2\sin^2(a)<br>$$</p><h2 id="向量与模长"><a href="#向量与模长" class="headerlink" title="向量与模长"></a>向量与模长</h2><p><a href="https://blog.csdn.net/weixin_50637207/article/details/126125516">Overleaf中绝对值符号以及\lvert和\mid区别_overleaf绝对值_王大央的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/skytruine/article/details/105710349?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-105710349-blog-119947949.pc_relevant_show_downloadRating&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-105710349-blog-119947949.pc_relevant_show_downloadRating&utm_relevant_index=1">Markdown表格数学公式中使用绝对值“| |”或竖杠”|”_markdown 绝对值-CSDN博客</a></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livescript">向量 <span class="hljs-string">\vec&#123;a&#125;</span><br>模长 <span class="hljs-string">\vert</span> a <span class="hljs-string">\vert</span> <br></code></pre></td></tr></table></figure><p>$$<br>\vec{a} \times \vec{b} &#x3D; \vert a \vert \vert b\vert \sin{\theta} \<br>\vert \vert \vec{asd} \vert \vert<br>$$</p><h2 id="矩阵和方程组"><a href="#矩阵和方程组" class="headerlink" title="矩阵和方程组"></a>矩阵和方程组</h2><p>长公式换行：<a href="https://www.zhihu.com/question/618818933">(50 条消息) LaTex写公式怎么换行？ - 知乎 (zhihu.com)</a></p><p>矩阵换行： 分成两个公式块会有间隔。</p><h3 id="添加括号"><a href="#添加括号" class="headerlink" title="添加括号"></a>添加括号</h3><ol><li>在\begin{matrix} 前后添加 \left [ （括号类型）</li><li>直接指定格式，\begin{matrix}  <ul><li>matrix 原始</li><li>bmatrix    方括号</li><li>Bmatrix    大括号</li><li>Vmatrix    双竖线括号</li><li>pmatrix     大圆括号</li><li>begin{case} <strong>条件表达式</strong>  默认右括号</li><li>\left.   \right \ }  省略左括号</li></ul></li></ol><h3 id="添加省略号"><a href="#添加省略号" class="headerlink" title="添加省略号"></a>添加省略号</h3><ol><li>{\vdots} 列  </li><li>{\ddots}  斜 </li><li>{\cdots}  行</li></ol><h3 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h3><p>$$<br>\begin{equation}<br> \begin{split}</p><p>\begin{matrix}<br>   1 &amp; 2 &amp; 3 \<br>  4 &amp; 5 &amp; 6 \<br>  7 &amp; 8 &amp; 9 \<br>  \end{matrix}</p><p>\left[<br> \begin{matrix}<br>   1 &amp; 2 &amp; 3 \<br>   4 &amp; 5 &amp; 6 \<br>   7 &amp; 8 &amp; 9<br>  \end{matrix}<br>  \right] </p><p>  \begin{bmatrix}<br>{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\<br>{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\<br>{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\<br>{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\<br>\end{bmatrix}</p><p> \begin{Bmatrix}<br>   1 &amp; 2 &amp; 3 \<br>   4 &amp; 5 &amp; 6 \<br>   7 &amp; 8 &amp; 9<br>  \end{Bmatrix}</p><p>   \begin{Vmatrix}<br>   1 &amp; 2 &amp; 3 \<br>   4 &amp; 5 &amp; 6 \<br>   7 &amp; 8 &amp; 9<br>  \end{Vmatrix} </p><p>\begin{pmatrix}<br>    a_{11} &amp; a_{12}\<br>    a_{21} &amp; a_{22}<br>    \end{pmatrix} ^{T}<br>     \end{split}<br> \end{equation}<br>$$</p><p>$$<br>\left[<br>\begin{array}{c|ccc}<br>    a11 &amp; a12 &amp; a13 &amp; b1 \<br>\hline a21 &amp; a22 &amp; a23 &amp; b2 \<br>  a31 &amp; a32 &amp; a33 &amp; b3 \<br>\end{array}<br>\right]<br>$$</p><p>$$<br>\begin{cases}<br>a_1x+b_1y+c_1z&#x3D;d_1\<br>a_2x+b_2y+c_2z&#x3D;d_2\<br>a_3x+b_3y+c_3z&#x3D;d_3\<br>\end{cases}<br>$$</p><p>$$<br>\left.<br>\begin{aligned}x+y &amp;&gt; 5 \<br>y-y &amp;&gt; 11<br>\end{aligned}<br>\right}</p><p>\Rightarrow x^2 - y^2 &gt; 55<br>$$</p><p>$$<br>P(x|Pa_x)&#x3D;<br>\begin{cases}<br>        1, &amp; x&#x3D;f(Pa_{x})\<br>        0, &amp; other\ values<br>\end{cases}<br>$$</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>$$<br>\begin{array}{c|lll}<br>{↓}&amp;{a}&amp;{b}&amp;{c}\<br>\hline<br>{R_1}&amp;{c}&amp;{b}&amp;{a}\<br>{R_2}&amp;{b}&amp;{c}&amp;{c}\<br>\end{array}<br>$$</p><p>在 equation 环境中添加 array 环境，就可以实现数组或者表格的形式，其中每个元素用 &amp; 分隔， \hline表示横线。公式中如果有中文，就要用\text{}或者\mbox{}装载，否则不能正常输出中文。</p><p>单行文本也可以表示矩阵和公式数组。<br>$$<br>\begin{equation}<br>\begin{array}{c|l|c|r}<br>n &amp; \text{左对齐} &amp; \text{居中对齐} &amp; \text{右对齐} \<br>\hline1 &amp; 0.24 &amp; 1 &amp; 125 \<br>\hline2 &amp; -1 &amp; 189 &amp; -8 \<br>\hline3 &amp; -20 &amp; 2000 &amp; 1+10i<br>\end{array}<br>\end{equation}<br>$$<br><strong>开头结尾</strong>： <code>\begin&#123;array&#125;</code> ， <code>\end&#123;array&#125;</code></p><p><strong>定义式</strong>：例：<code>&#123;|c|c|c|&#125;</code>，其中<code>c</code> <code>l</code> <code>r</code> 分别代表居中、左对齐及右对齐。</p><p><strong>分割线</strong>：①<strong>竖直分割线</strong>：在定义式中插入 <code>|</code>， （<code>||</code>表示两条竖直分割线）。</p><p>②<strong>水平分割线</strong>：在下一行输入前插入 <code>\hline</code>，以下图真值表为例。</p><p>其他：每行元素间均须要插入 <code>&amp;</code> ，每行元素以 <code>\\</code> 结尾。<br>$$<br>\begin{array}{|c|c|c|}<br>    \hline 2&amp;9&amp;4\<br>    \hline 7&amp;5&amp;3\<br>    \hline 6&amp;1&amp;8\<br>    \hline<br>\end{array}<br>$$</p><h2 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h2><ol><li>积分(有,可以增加间距，标准写法) \int_{lower}^{upper} , dx  </li><li>极限     \lim\limits_{n\to\infty}    </li><li>累加 \sum\limits_{n&#x3D;1}^{\infty} </li><li>累乘\prod\limits_{n&#x3D;1}^{\infty}</li><li>多参数极限（参数转行）   \lim\limits_{\substack{w\to w_0\ \ x \ to x_0  </li><li>多重积分（多个i）   \iiint_V  \mu(u,v,w)   ,du,dv,dw</li></ol><p>$$<br>\begin{align*}<br>\lim\limits_{n\to\infty}<br>\sum\limits_{n&#x3D;1}^{\infty}<br>\prod\limits_{n&#x3D;1}^{\infty}<br>\end {align*}<br>$$</p><p>$$<br>{\displaystyle  \int_{0}^{+\infty} } </p><p>\lim\limits_{\substack{w\to w_0\<br>x\to x_0 \ y\to y_0\ z\to z_0}} \<br> \int_{a}^{b} x^2 ,dx   \<br>  \iiint_V \mu(u,v,w) ,du,dv,dw<br>$$</p><h2 id="偏微分"><a href="#偏微分" class="headerlink" title="偏微分"></a>偏微分</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">\frac&#123;\<span class="hljs-keyword">partial</span>^<span class="hljs-number">2</span> u&#125;&#123;\<span class="hljs-keyword">partial</span> z^<span class="hljs-number">2</span>&#125;<br></code></pre></td></tr></table></figure><p>partical 部分的，偏袒的  , frac 分号<br>$$<br>\frac{du}{dt} and \frac{d^2 u}{dx^2}  \<br>\frac{\partial u}{\partial t}<br>&#x3D; h^2 \left(\frac{\partial^2 u}{\partial x^2} + \frac{\partial^2 u}{\partial y^2}  + \frac{\partial^2 u}{\partial z^2}\right) \<br>\frac{\partial^2 u}{\partial z^2}<br>$$</p><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><h3 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h3>]]></content>
    
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客优化-3</title>
    <link href="/2023/11/01/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-3/"/>
    <url>/2023/11/01/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-3/</url>
    
    <content type="html"><![CDATA[<h2 id="ICP备案"><a href="#ICP备案" class="headerlink" title="ICP备案"></a>ICP备案</h2><p>网络内容提供商备案</p><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><p><a href="https://cloud.tencent.com/developer/article/1663685">个人博客如何申请ICP备案-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://segmentfault.com/q/1010000011333476">hexo 使用的是github pages，该如何进行备案？ - SegmentFault 思否</a></p><h3 id="后续报错"><a href="#后续报错" class="headerlink" title="后续报错"></a>后续报错</h3><p><a href="https://www.cnblogs.com/yzhihao/p/6964208.html">Hexo 搭建博客 本地运行 常见报错及解决办法 - FEDeveloper - 博客园 (cnblogs.com)</a></p><h3 id="LaTeX添加"><a href="#LaTeX添加" class="headerlink" title="LaTeX添加"></a>LaTeX添加</h3>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客优化-2</title>
    <link href="/2023/10/30/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-2/"/>
    <url>/2023/10/30/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-2/</url>
    
    <content type="html"><![CDATA[<h2 id="图床搭建参考素材"><a href="#图床搭建参考素材" class="headerlink" title="图床搭建参考素材"></a>图床搭建参考素材</h2><h3 id="其他图床："><a href="#其他图床：" class="headerlink" title="其他图床："></a>其他图床：</h3><ol><li><p><a href="https://imgse.com/page/about">关于我们 - 路过图床 (imgse.com)</a></p></li><li><p><a href="https://sm.ms/">Image Upload - SM.MS - Simple Free Image Hosting</a></p></li><li><p><a href="https://www.qiniu.com/products/kodo#storage_type">对象存储 Kodo_云存储_海量安全高可靠云存储_oss - 七牛云 (qiniu.com)</a></p></li><li><p><a href="http://www.tietuku.com/">贴图库 — 免费、高速、稳定、专业图片外链 (tietuku.com)</a></p></li></ol><h3 id="GitHub做图床："><a href="#GitHub做图床：" class="headerlink" title="GitHub做图床："></a>GitHub做图床：</h3><ol><li><a href="https://blog.csdn.net/u011291916/article/details/119194338">Github图床搭建和使用（带CDN加速）_dithub图床加速-CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/489236769">使用Github+picGo搭建图床，保姆级教程来了 - 知乎 (zhihu.com)</a></li><li>注意1G的储存空间</li></ol><h3 id="图片处理工具："><a href="#图片处理工具：" class="headerlink" title="图片处理工具："></a>图片处理工具：</h3><ol><li><a href="https://tinypng.com/">TinyPNG – 智能压缩 WebP、PNG 和 JPEG 图像</a></li><li><a href="https://github.com/Iamxiaozhu/file-uploader-cli">Iamxiaozhu&#x2F;file-uploader-cli: 命令行上传工具，Typora上传服务 (github.com)</a></li><li><a href="https://www.xiebruce.top/17.html">PicUploader: 一个还不错的图床工具 | Bruce’s Blog (xiebruce.top)</a></li><li><a href="https://gitee.com/icexmoon/markdown-img">markdown-img: A program for help you to deal markdown file and share it in Internet. (gitee.com)</a></li></ol><h3 id="额外文章："><a href="#额外文章：" class="headerlink" title="额外文章："></a>额外文章：</h3><ol><li><a href="https://www.zhihu.com/question/22297992/answer/1327418986">阿里云oss好贵啊，有没有什么更好的替换方案？ - 知乎 (zhihu.com)</a></li><li>上传文件应该经过后端吗，还是直接上传至阿里oss? - 知乎 (zhihu.com)](</li></ol><h3 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h3><ol><li><p><a href="https://zhuanlan.zhihu.com/p/104152479">阿里云OSS PicGo 配置图床教程 超详细 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://www.zhihu.com/question/524094354/answer/2408710720">(34 条消息) 有什么好用的图床推荐，gitee图床挂了吗？ - 知乎 (zhihu.com)</a></p><ul><li>全文件夹图片访问路径替换（在VSCODE脚本实现）</li></ul></li><li><p><a href="https://zhuanlan.zhihu.com/p/489236769">使用Github+picGo搭建图床，保姆级教程来了 - 知乎 (zhihu.com)</a></p><ul><li>剪切图片到typroa，配置后可通过picgo上传至oss</li></ul></li></ol><h2 id="费用详情"><a href="#费用详情" class="headerlink" title="费用详情"></a>费用详情</h2><p><a href="https://help.aliyun.com/zh/oss/product-overview/resource-plan#sectiondiv-iik-5xf-jnk">资源包_对象存储 OSS-阿里云帮助中心 (aliyun.com)</a></p><p>我购买的是：标准-本地冗余储存40G</p><ol><li>抵扣  标准-本地冗余存储类型的OSS文件或ECS快照的<strong>存储费用</strong></li><li>资源类别 是 总量恒定型 资源包</li><li><strong>每小时都有固定额度</strong>，剩余额度不可转移到下个小时，超出额度按量付费。（在购买该资源包后有效期的任意小时内，容量不超过40 GB的情况下，可以使用购买的存储包进行抵扣。有效期内，如果存储容量超出40 GB，则超出部分按量付费。）</li><li>只会抵消储存的费用。</li></ol><h3 id="明细查询"><a href="#明细查询" class="headerlink" title="明细查询"></a>明细查询</h3><p><a href="https://help.aliyun.com/zh/oss/product-overview/query-bills">账单查询_对象存储 OSS-阿里云帮助中心 (aliyun.com)</a></p><p>费用-》用户中心-》资源实例管理-》资源包</p><p>可以查看资源包的使用明细</p><p><img src="https://narrciss.oss-cn-guangzhou.aliyuncs.com/blog/image-20231031163328241.png" alt="image-20231031163328241"></p><h2 id="报警设置"><a href="#报警设置" class="headerlink" title="报警设置"></a>报警设置</h2><ol><li><a href="https://help.aliyun.com/zh/oss/user-guide/monitoring-service/">监控服务_对象存储 OSS-阿里云帮助中心 (aliyun.com)</a></li><li><a href="https://help.aliyun.com/zh/cms/user-guide/create-an-alert-contact-or-alert-contact-group#task-2514452">如何创建报警联系人或报警联系组_云监控-阿里云帮助中心 (aliyun.com)</a></li><li>进入阿里云控制面板，再进入云监控的储存oss</li><li>添加报警联系人（可以邮件，短信，高级的可以使用回调函数，选择短信够用，验证时会受到短信，点击即可配置报警短信号码）</li><li>添加报警规则（按照需要选择指标，可以多个，我选择的是公网下行流量）</li><li>注意只是报警，不会做更多事情（比如关闭服务）</li></ol><h2 id="日志系统"><a href="#日志系统" class="headerlink" title="日志系统"></a>日志系统</h2><p><a href="https://help.aliyun.com/zh/cms/user-guide/log-monitoring-3/">日志监控_云监控-阿里云帮助中心 (aliyun.com)</a></p><p><a href="https://help.aliyun.com/zh/cms/use-cases/analyze-website-access-logs-and-configure-alert-rules?scm=20140722.H_55631._.ID_55631-OR_rec-V_1">通过日志监控如何实现网站访问日志的监控与报警_云监控-阿里云帮助中心 (aliyun.com)</a></p><p>功能关闭。</p><p><a href="https://help.aliyun.com/zh/cms/user-guide/troubleshooting">如何排查日志监控的常见问题_云监控-阿里云帮助中心 (aliyun.com)</a></p><p><a href="https://help.aliyun.com/zh/cms/use-cases/analyze-website-access-logs-and-configure-alert-rules?scm=20140722.H_55631._.ID_55631-OR_rec-V_1">通过日志监控如何实现网站访问日志的监控与报警_云监控-阿里云帮助中心 (aliyun.com)</a></p><p><a href="https://help.aliyun.com/zh/sls/user-guide/manage-a-logstore">如何管理Logstore_日志服务-阿里云帮助中心 (aliyun.com)</a></p><h2 id="防盗链处理"><a href="#防盗链处理" class="headerlink" title="防盗链处理"></a>防盗链处理</h2><h3 id="盗链"><a href="#盗链" class="headerlink" title="盗链"></a>盗链</h3><ol><li>oss链接下载是有费用的，偷用你的链接相当于别人用你的东西还要自己出钱</li><li>爬虫也能产生盗链资费</li></ol><h3 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h3><ol><li>直接使用图片的oss链接也可以重复下载<ul><li>相关资料匮乏，也许这并不是个大问题？可以复制链接下载，添加到网页后会有黑白名单限制，如果不添加到网页直接重复下载你呢？设置下载时间间隔或者次数?</li></ul></li><li>在hexo设置图片加上透明层防止下载原图</li><li>水印</li><li></li></ol><h3 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h3><ol><li><a href="https://zhuanlan.zhihu.com/p/143257415">关于防御oss被人恶意刷流量的一点思路方案 - 知乎 (zhihu.com)</a></li><li><a href="https://www.upyun.com/tech/article/583/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%BD%91%E7%AB%99%E7%9A%84%E9%98%B2%E7%9B%97%E9%93%BE.html">如何选择适合自己网站的防盗链 - 又拍云 (upyun.com)</a></li></ol><h3 id="危机处理"><a href="#危机处理" class="headerlink" title="危机处理"></a>危机处理</h3><ol><li>直接设置bucket的权限为private</li><li>删除管理oss的用户，更换新的用户和key</li><li><a href="https://help.aliyun.com/zh/oss/product-overview/how-do-i-deactivate-oss-or-stop-oss-charging-my-resources">如何关闭OSS服务或停止计费？_对象存储 OSS-阿里云帮助中心 (aliyun.com)</a></li><li>通过日志系统，对ref和ip设置黑白名单。</li><li>。。。</li></ol><h2 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h2><ol><li>picgo从相册移除图片不会删除oss中的图片，手机端可以。</li><li>picgo和typroa只在允许空refere情况才可以预览图片（白名单设置localhost不行）</li><li>本地加载图片也需要请求oss，但是并不知道picgo上传的url或者IP，白名单里并没有本地，所以本地加载图片会失败，包括相册和文件中。</li><li>直接拖动图片到typroa里不会生成链接，复制到typroa里才可以。</li></ol><h2 id="手机端使用"><a href="#手机端使用" class="headerlink" title="手机端使用"></a>手机端使用</h2><p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/advance.html#picgo%E6%89%8B%E6%9C%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%81%94%E5%8A%A8">高级技巧 | PicGo</a></p><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><ol><li>插件设置可以找到插件列表</li><li>搜索栏目可以找到插件（网络安装，一些安装不了）</li><li>本地安装需要导入</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集-知乎</title>
    <link href="/2023/10/28/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E7%9F%A5%E4%B9%8E/"/>
    <url>/2023/10/28/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E7%9F%A5%E4%B9%8E/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/50408698/answer/2997610936">(30 条消息) 有哪些你看了以后大呼过瘾的编程书？ - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客优化-3</title>
    <link href="/2023/10/28/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-1/"/>
    <url>/2023/10/28/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96-1/</url>
    
    <content type="html"><![CDATA[<h2 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h2><h3 id="备份原因"><a href="#备份原因" class="headerlink" title="备份原因"></a>备份原因</h3><p>上传到仓库只有生成的静态网页文件，本地的源文件删除了就不能通过git恢复了.</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://cloud.tencent.com/developer/article/1743949">Hexo搭建个人博客（备份和迁移）-腾讯云开发者社区-腾讯云 (tencent.com)</a></li><li><a href="https://blog.csdn.net/muzihuaner/article/details/113880440">【精选】Hexo博客的备份与恢复_hexo 博客 源丢失_木子欢儿的博客-CSDN博客</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600/898732864121440">添加远程库 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></li><li><a href="https://blog.csdn.net/whu_zhangmin/article/details/12944999">git remote命令查看远程仓库信息时，出现new ( next fetch will store in remotes&#x2F;origin)提示-CSDN博客</a></li><li><a href="https://blog.csdn.net/benben_2015/article/details/82867345">Error：pathspec ‘master’ did not match any files known to git_master did not match-CSDN博客</a>  切换分支的报错参考</li><li><a href="https://zhuanlan.zhihu.com/p/553144729">Hexo博客源文件备份 - 知乎 (zhihu.com)</a></li><li><a href="https://cloud.tencent.com/developer/article/1964358">Git命令手动备份Hexo博客源文件-腾讯云开发者社区-腾讯云 (tencent.com)</a></li><li><a href="https://blog.csdn.net/wudinaniya/article/details/104125961">git 克隆指定分支代码_git clone -b-CSDN博客</a></li><li><a href="https://www.runoob.com/git/git-basic-operations.html">Git 基本操作 | 菜鸟教程 (runoob.com)</a></li></ol><h3 id="备用"><a href="#备用" class="headerlink" title="备用"></a>备用</h3><ol><li><a href="https://zhuanlan.zhihu.com/p/136355306">上传本地文件（夹）到GitHub和更新仓库文件 - 知乎 (zhihu.com)</a></li><li><a href="https://blog.csdn.net/qq_41793001/article/details/103151182">使用hexo-git-backup插件备份博客源文件-CSDN博客</a></li></ol><h2 id="预先处理"><a href="#预先处理" class="headerlink" title="预先处理"></a>预先处理</h2><h3 id="删除-git"><a href="#删除-git" class="headerlink" title="删除 .git"></a>删除 .git</h3><p>将hexo的主题下的<code>.git</code>删除，比如删除themes&#x2F;next&#x2F;目录下的.git否则无法将主题文件夹push。（不能重复包含.git）</p><h3 id="创建-gitignore"><a href="#创建-gitignore" class="headerlink" title="创建.gitignore"></a>创建.gitignore</h3><p>在本地blog文件夹下创建文件<code>.gitignore</code>（格式：所有文件），正常情况这个文件是自动生成的，打开后写入：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-meta">.DS_Store</span><br>Thumbs<span class="hljs-number">.</span><span class="hljs-built_in">db</span><br><span class="hljs-built_in">db</span><span class="hljs-number">.</span>json<br>*.log<br>node_modules/<br><span class="hljs-meta">public</span>/<br><span class="hljs-meta">.deploy</span>*/<br></code></pre></td></tr></table></figure><p>这个文件的存在是指在push的时候忽略文件中的文件格式。</p><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#git初始化，好像会创建一个默认仓库，如果有仓库就没有影响。</span><br>git init<br><br><span class="hljs-comment">#创建hexo分支，用来存放源码</span><br>git checkout -b hexo<br><br><span class="hljs-comment">#git 文件添加</span><br>git <span class="hljs-built_in">add</span> .<br><br><span class="hljs-comment">#git 提交</span><br>git commit -m <span class="hljs-string">&quot;backup&quot;</span><br><br><span class="hljs-comment">#添加远程仓库，github上的博客仓库 </span><br>git remote <span class="hljs-built_in">add</span> origin git@gitHub.com:用户名/仓库名.git<br><br><span class="hljs-comment">#push到hexo分支</span><br>git push origin hexo<br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>在git中，可利用checkout命令转换分支，该命令的作用就是切换分支或恢复工作树文件，语法为“git checkout 分支名”；当参数设置为“-b”时，可以在新分支创建的同时切换分支，语法为“git checkout -b 分支名”。</li><li>origin是远程仓库的命名，你的仓库的小名。<strong>关联到远程库是git操作(远程库的分支等操作），部署是hexo操作（部署到仓库)。</strong></li><li><code>git add .</code>添加当前目录下的所有文件到暂存区</li><li><code>git commit </code>命令将暂存区内容添加到本地仓库中</li></ol><h2 id="分支的问题"><a href="#分支的问题" class="headerlink" title="分支的问题"></a>分支的问题</h2><ol><li><code>ASUS@LAPTOP-GEMI5NEH MINGW64 /d/Blog/blog2 (hexo)</code>命令后缀是hexo，说明源文件提交到的分支是它？但是config里部署的分支是master</li><li>网页访问的仓库地址时是访问有生成文件的master分支，但是master分支为什么更新了？表明部署成功了</li><li>我的GitHub仓库只有master和hexo两个分支，我使用hexo分支备份源文件，master分支存储生成文件，是部署同时把源文件也上传了吗？</li><li>虽然本地命令行说明是hexo分支，也能达成备份和更新的目的，但我在考虑是否需要更换到master</li></ol><h2 id="注意是手动备份"><a href="#注意是手动备份" class="headerlink" title="注意是手动备份"></a>注意是手动备份</h2><p>也就是说需要重复备份才会更新GitHub上hexo分支上储存的源文件（查看GitHub备份的源文件后发现还是初始上传的样子），分支的问题1-3是因为没有搞清楚是手动备份，还是部署到master分支</p><p>问题4有点错误，现在只是手动备份了一次。</p><p>备份路径的后缀是hexo，不用修改了，以后也要手动备份到这。</p><h2 id="切换分支记录"><a href="#切换分支记录" class="headerlink" title="切换分支记录"></a>切换分支记录</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs scss">ASUS<span class="hljs-keyword">@LAPTOP-GEMI</span>5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git checkout master<br><span class="hljs-attribute">error</span>: pathspec <span class="hljs-string">&#x27;master&#x27;</span> did <span class="hljs-keyword">not</span> match any file(s) known to git<br><br>ASUS<span class="hljs-keyword">@LAPTOP-GEMI</span>5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git branch -a<br>* hexo<br>  remotes/origin/hexo<br><br>ASUS<span class="hljs-keyword">@LAPTOP-GEMI</span>5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git remote show origin<br>* remote origin<br>  Fetch <span class="hljs-attribute">URL</span>: git<span class="hljs-keyword">@github</span>.<span class="hljs-attribute">com</span>:narrciss/narrciss.github.io.git<br>  Push  <span class="hljs-attribute">URL</span>: git<span class="hljs-keyword">@github</span>.<span class="hljs-attribute">com</span>:narrciss/narrciss.github.io.git<br>  HEAD <span class="hljs-attribute">branch</span>: master<br>  Remote <span class="hljs-attribute">branches</span>:<br>    hexo   tracked<br>    master new (next fetch will store in remotes/origin)<br>  Local ref configured for <span class="hljs-string">&#x27;git push&#x27;</span>:<br>    hexo pushes to hexo (up to date)<br><br>ASUS<span class="hljs-keyword">@LAPTOP-GEMI</span>5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git checkout /remotes/origin/master<br><span class="hljs-attribute">fatal</span>: Invalid path <span class="hljs-string">&#x27;D:/Git/remotes&#x27;</span>: No such file <span class="hljs-keyword">or</span> directory<br><br>ASUS<span class="hljs-keyword">@LAPTOP-GEMI</span>5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git remote -v<br>origin  git<span class="hljs-keyword">@github</span>.<span class="hljs-attribute">com</span>:narrciss/narrciss.github.io.git (fetch)<br>origin  git<span class="hljs-keyword">@github</span>.<span class="hljs-attribute">com</span>:narrciss/narrciss.github.io.git (push)<br><br></code></pre></td></tr></table></figure><h3 id="部署时，master分支设置为追踪"><a href="#部署时，master分支设置为追踪" class="headerlink" title="部署时，master分支设置为追踪"></a>部署时，master分支设置为追踪</h3><p>不知道作用</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">To</span> https:<span class="hljs-comment">//github.com/narrciss/narrciss.github.io.git</span><br> + f107820<span class="hljs-params">...</span>b31a274 HEAD -&gt; master (forced update)<br>branch <span class="hljs-string">&#x27;master&#x27;</span> <span class="hljs-built_in">set</span> up <span class="hljs-keyword">to</span> track <span class="hljs-string">&#x27;https://github.com/narrciss/narrciss.github.io.git/master&#x27;</span>.<br>INFO  Deploy done: git<br><br></code></pre></td></tr></table></figure><h2 id="同步分支信息"><a href="#同步分支信息" class="headerlink" title="同步分支信息"></a>同步分支信息</h2><p>使用 git fetch origin 命令同步分支信息（参考资料6）</p><p>原来，git branch -a 输出的是本地仓库的远程分支信息，</p><p>而git remote show origin需要联网输出实时的远程仓库的分支信息。</p><p>出现new ( next fetch will store in remotes&#x2F;origin)，由于远程新增了分支，而本地并没有同步信息导致的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">ASUS@LAPTOP-GEMI5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git fetch origin<br>remote: Enumerating objects: 364, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (364/364), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (234/234), <span class="hljs-keyword">done</span>.<br>remote: Total 364 (delta 65), reused 364 (delta 65), pack-reused 0<br>Receiving objects: 100% (364/364), 7.39 MiB | 1.68 MiB/s, <span class="hljs-keyword">done</span>.<br>Resolving deltas: 100% (65/65), <span class="hljs-keyword">done</span>.<br>From github.com:narrciss/narrciss.github.io<br> * [new branch]      master     -&gt; origin/master<br><br>ASUS@LAPTOP-GEMI5NEH MINGW64 /d/Blog/blog2 (hexo)<br>$ git branch -a<br>* hexo<br>  remotes/origin/hexo<br>  remotes/origin/master<br>  <br></code></pre></td></tr></table></figure><h2 id="以后手动备份的操作"><a href="#以后手动备份的操作" class="headerlink" title="以后手动备份的操作"></a>以后手动备份的操作</h2><p>以后更新备份使用：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">git add .<br>git commit  -m  &quot;backup&quot;<br>git push origin 分支名 <br></code></pre></td></tr></table></figure><p>不具体指定push的分支会报错</p><p><a href="https://www.cnblogs.com/Amerys/p/14669572.html">git推送代码报错：fatal: The current branch master has no upstream branch. To push the current branch and set the remote as upstream - Amerys - 博客园 (cnblogs.com)</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ git push<br>fatal: The <span class="hljs-keyword">current</span> branch hexo has <span class="hljs-keyword">no</span> upstream branch.<br><span class="hljs-keyword">To</span> push the <span class="hljs-keyword">current</span> branch <span class="hljs-keyword">and</span> <span class="hljs-keyword">set</span> the remote <span class="hljs-keyword">as</span> upstream, use<br><br>    git push <span class="hljs-comment">--set-upstream origin hexo</span><br><br><span class="hljs-keyword">To</span> have this happen automatically <span class="hljs-keyword">for</span> branches <span class="hljs-keyword">without</span> a tracking<br>upstream, see <span class="hljs-string">&#x27;push.autoSetupRemote&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;git help config&#x27;</span>.<br></code></pre></td></tr></table></figure><h2 id="脚本一键备份并部署（可选）"><a href="#脚本一键备份并部署（可选）" class="headerlink" title="脚本一键备份并部署（可选）"></a>脚本一键备份并部署（可选）</h2><p>由于每次更新后都要输入大量命令行十分麻烦，遂创建一键部署脚本方便备份部署</p><p>在博客根目录下创建deploy.sh文件，写入</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs text">echo &quot;Start&quot;<br>git add .<br>git commit -m backup<br>git push<br>hexo g<br>hexo d<br>echo &quot;Finish&quot;<br>echo 按任意键继续<br>read -n 1<br></code></pre></td></tr></table></figure><p>保存后，在博客根目录双击执行或用命令<code>./deploy.sh</code> 即可实现博客的一键备份并部署</p><h2 id="克隆分支到本地"><a href="#克隆分支到本地" class="headerlink" title="克隆分支到本地"></a>克隆分支到本地</h2><p>注意不是克隆库，而是需要克隆分支。（因为我按照参考资料1使用分支保存源文件）</p><p>使用git拉代码时可以使用 -b 指定分支指定拉 master 分支代码</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">-b</span> <span class="hljs-keyword">master</span> <span class="hljs-title">http</span>://github.com/narrciss/narrciss.github.io<br></code></pre></td></tr></table></figure><p>查看当前项目拉的分支</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git branch</span><br></code></pre></td></tr></table></figure><p>具体的分支详情</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git branch -vv</span><br></code></pre></td></tr></table></figure><h2 id="恢复博客（没有尝试）"><a href="#恢复博客（没有尝试）" class="headerlink" title="恢复博客（没有尝试）"></a>恢复博客（没有尝试）</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">恢复博客<br>在<span class="hljs-keyword">clone来的文件夹里执行，记得搭建环境</span><br><span class="hljs-keyword"></span><br>npm <span class="hljs-keyword">install </span>hexo-cli<br>npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install </span>hexo-deployer-git<br>这样博客源文件就成功移植了，再用hexo clean、hexo g、hexo d即可部署完成<br></code></pre></td></tr></table></figure><h2 id="总结命令"><a href="#总结命令" class="headerlink" title="总结命令"></a>总结命令</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git init<br>git checkout -b hexo<br>git add .<br>git commit -m <span class="hljs-string">&quot;backup&quot;</span><br>git remote add origin git@gitHub.com:用户名/仓库名.git<br>git push origin hexo<br><br>git checkout origin/<span class="hljs-keyword">master</span><br><span class="hljs-title">git</span> checkout <span class="hljs-keyword">master</span><br><br><span class="hljs-title">git</span> branch -a<br>git remote show origin<br>git remote -v<br><br>git fetch origin<br><br>git <span class="hljs-keyword">clone</span> <span class="hljs-title">-b</span> <span class="hljs-keyword">master</span> <span class="hljs-title">http</span>://github.com/narrciss/narrciss.github.io<br>git branch -vv<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客-2</title>
    <link href="/2023/10/27/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/"/>
    <url>/2023/10/27/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-2/</url>
    
    <content type="html"><![CDATA[<h2 id="静态页面刷新问题"><a href="#静态页面刷新问题" class="headerlink" title="静态页面刷新问题"></a>静态页面刷新问题</h2><p>直接提示用户刷新一下不久好了？</p><p>相关链接：</p><ol><li><a href="https://blog.csdn.net/m0_37750806/article/details/119269635">Html静态页面更新，解决浏览器缓存不更新问题_html强制刷新多个css缓存-CSDN博客</a></li><li>GPT问答。问：静态页面在加载后，过段时间再次访问该网站是不是只会加载静态页面的缓存而不进行更新</li></ol><p>是的，当浏览器加载一个静态页面后，它会将页面的资源（例如HTML、CSS、JavaScript文件）存储在缓存中。如果你在一段时间后再次访问同样的网站，浏览器会首先检查缓存是否存在该页面的副本。如果存在，并且缓存仍然有效（根据资源的缓存策略），浏览器将直接从缓存中加载页面，而不会向服务器发起新的请求。</p><p>这种行为可以提高网页的加载速度和减轻服务器的负担。然而，这也意味着当你对静态页面进行更新时，用户可能无法立即看到最新的内容，直到浏览器的缓存过期或被清除为止。</p><p>如果你希望在访问静态页面时总是获取最新的内容，可以通过一些方法来解决缓存问题，如修改文件的URL、使用版本号或哈希值追加到文件名中、设置HTTP头信息等，来告诉浏览器获取最新的资源。这样可以确保用户始终获得更新后的页面内容。</p><p>另外，对于开发和测试阶段，你可以使用浏览器的开发者工具来禁用缓存，以便每次刷新页面时都从服务器获取最新的资源。</p><h2 id="新建的blog可以预览但使用hexo-d命令没有更新GitHub"><a href="#新建的blog可以预览但使用hexo-d命令没有更新GitHub" class="headerlink" title="新建的blog可以预览但使用hexo d命令没有更新GitHub"></a>新建的blog可以预览但使用hexo d命令没有更新GitHub</h2><p>记得检查_config.yml配置</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">deploy</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">type</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attribute">repo</span><span class="hljs-punctuation">:</span> <span class="hljs-string">https://github.com/用户名/用户名.github.io.git</span><br>  <span class="hljs-attribute">branch</span><span class="hljs-punctuation">:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><h2 id="使用fluid主题，source里的about文件夹里的index-md不能使用typora打开，会出现编码错误"><a href="#使用fluid主题，source里的about文件夹里的index-md不能使用typora打开，会出现编码错误" class="headerlink" title="使用fluid主题，source里的about文件夹里的index.md不能使用typora打开，会出现编码错误"></a>使用fluid主题，source里的about文件夹里的index.md不能使用typora打开，会出现编码错误</h2><h2 id="报错-FATAL-YAMLException-duplicated-mapping"><a href="#报错-FATAL-YAMLException-duplicated-mapping" class="headerlink" title="报错-FATAL-YAMLException-duplicated-mapping"></a>报错-FATAL-YAMLException-duplicated-mapping</h2><p>配置文件有重复代码，删除即可。</p><h2 id="YAMLException-can-not-read-a-block-mapping-entry"><a href="#YAMLException-can-not-read-a-block-mapping-entry" class="headerlink" title="YAMLException: can not read a block mapping entry;"></a>YAMLException: can not read a block mapping entry;</h2><p>解决方法：使用vscode打开，检查是否有编码错误和缺失空格</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">ERROR </span>Process failed: _posts/搭建博客<span class="hljs-string">-2</span>.md<br>YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key (5:1)<br><br> 2 | date: 2023<span class="hljs-string">-10</span><span class="hljs-string">-27</span> 20:48:40<br> 3 | tags: blog<br> 4 | excerpt:捉bug。<br> 5 |<br></code></pre></td></tr></table></figure><h2 id="删除blog文件与卸载hexo"><a href="#删除blog文件与卸载hexo" class="headerlink" title="删除blog文件与卸载hexo"></a>删除blog文件与卸载hexo</h2><p><a href="https://www.zhihu.com/question/49715656"> 如何干净的卸载 HEXO？ - 知乎 (zhihu.com)</a></p><p>命令提示符中，</p><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bnf">npm uninstall hexo-cli -g<br></code></pre></td></tr></table></figure><p>然后文件夹中的blog，手动删除。</p><p>另外，进行重装之前，如果还是在原来位置，必须手动清理了才能迁移安装。</p><p><a href="https://cloud.tencent.com/developer/article/2140491">Hexo博客彻底删除文章教程-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>手动删除本地文件后直接与GitHub同步</p><h2 id="Connection-was-reset"><a href="#Connection-was-reset" class="headerlink" title="Connection was reset"></a>Connection was reset</h2><p>报错提示</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: unable to access &#x27;https://github.com/narrciss/narrciss.github.io.git/&#x27;: Recv failure: Connection was reset<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">fatal: unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">access</span> <span class="hljs-symbol">&#x27;https</span>://github.com/narrciss/narrciss.github.io.git/&#x27;: Failed <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> github.com <span class="hljs-keyword">port</span> <span class="hljs-number">443</span> <span class="hljs-keyword">after</span> <span class="hljs-number">21113</span> ms: Couldn<span class="hljs-symbol">&#x27;t</span> connect <span class="hljs-keyword">to</span> server<br>FATAL Something<span class="hljs-symbol">&#x27;s</span> wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-literal">Error</span>: Spawn failed<br></code></pre></td></tr></table></figure><p>一段时间后又恢复，大概是端口占用问题，具体是哪个端口记得是443？</p><p>相关链接</p><ol><li><a href="https://blog.csdn.net/commshare/article/details/130523009">【github】Connection reset by 20.205.243.160 port 443_等风来不如迎风去的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/algebra007/article/details/119242167">如何查看端口被哪个进程占用（Windows&#x2F;Linux）_查看占用端口_天下溪-algebra的博客-CSDN博客</a></li><li><a href="https://www.runoob.com/w3cnote/windows-finds-port-usage.html">Windows下如何查看某个端口被谁占用 | 菜鸟教程 (runoob.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/654998555">报错处理-Recv failure Connection was reset - 知乎 (zhihu.com)</a></li><li><a href="https://blog.csdn.net/good_good_xiu/article/details/118567249">git提交或克隆报错fatal: unable to access ‘https://github.com/tata20191003/autowrite.git/‘: Failed to connec_fatal: unable to access ‘https://github.com/whldk/_good_good_xiu的博客-CSDN博客</a></li><li><a href="https://blog.csdn.net/weixin_44223180/article/details/133059575">【完美解决】GitHub连接超时问题 Recv failure: Connection was reset_github请求超时-CSDN博客</a></li></ol><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>使用devsidecar的git.exe加速</li><li>本机代理（方法6，结果失败）</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ASUS@LAPTOP-GEMI5NEH MINGW64 /d/Blog/blog2<br>$ git<span class="hljs-built_in"> config </span>--global -l<br>user.<span class="hljs-attribute">name</span>=narrciss<br>user.<span class="hljs-attribute">email</span>=2576124017@qq.com<br>http.<span class="hljs-attribute">sslverify</span>=<span class="hljs-literal">true</span><br>http.<span class="hljs-attribute">proxy</span>=http://127.0.0.1:7890<br></code></pre></td></tr></table></figure><p>代理ip地址有</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">http</span>=<span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7920</span>;<span class="hljs-keyword">https</span>=<span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">31181</span><br></code></pre></td></tr></table></figure><p>报错为</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">fatal: unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">access</span> <span class="hljs-symbol">&#x27;https</span>://github.com/narrciss/narrciss.github.io.git/&#x27;: Failed <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> <span class="hljs-keyword">port</span> <span class="hljs-number">7890</span> <span class="hljs-keyword">after</span> <span class="hljs-number">2047</span> ms: Couldn<span class="hljs-symbol">&#x27;t</span> connect <span class="hljs-keyword">to</span> server<br>FATAL Something<span class="hljs-symbol">&#x27;s</span> wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-literal">Error</span>: Spawn failed<br></code></pre></td></tr></table></figure><p>恢复原有状态</p><ol><li><a href="https://zhuanlan.zhihu.com/p/107323951">git 设置和取消指定域名代理 - git config proxy - 知乎 (zhihu.com)</a></li><li><a href="https://juejin.cn/post/7216147029230993445">Git配置代理和取消的两种方法 - 掘金 (juejin.cn)</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客-1</title>
    <link href="/2023/10/25/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/"/>
    <url>/2023/10/25/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-1/</url>
    
    <content type="html"><![CDATA[<h2 id="一、目标"><a href="#一、目标" class="headerlink" title="一、目标"></a>一、目标</h2><p>通过<a href="https://hexo.io/zh-cn/">Hexo</a>和<a href="https://github.com/">Github</a>搭建blog（变成了抓bug记录了）</p><p>参考文章：</p><ol><li><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/552639819">2022【保姆级教程】含泪搭建hexo博客 - 知乎 (zhihu.com)</a></li></ol><h2 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h2><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><ol><li>在GitHub中创建账号。可以使用QQ邮箱</li><li>创建仓库repository。仓库名应该为：<strong>用户名</strong>.github.io  这个<strong>用户名</strong>使用你的GitHub帐号名称代替，是固定写法。</li></ol><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><ol><li><p>Git是开源的分布式版本控制系统</p></li><li><p>安装Git。<a href="https://link.zhihu.com/?target=https://git-scm.com/download/win">Git - Downloading Package</a> </p></li><li><p>下载后默认配置安装，在命令行里输入git测试是否安装成功。</p></li><li><p>参考教程：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p></li></ol><h3 id="Git与GitHub绑定"><a href="#Git与GitHub绑定" class="headerlink" title="Git与GitHub绑定"></a>Git与GitHub绑定</h3><p>鼠标右击打开Git Bash，输入</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.name “你的GitHub用户名&quot;</span><br>git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.email &quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>注：不需要引号，是阅读标注</p><h3 id="hexo环境配置"><a href="#hexo环境配置" class="headerlink" title="hexo环境配置"></a>hexo环境配置</h3><ol><li>安装Node.js，<a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Download | Node.js</a> </li><li>Node.js会包含环境变量及npm的安装。</li><li>安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</li></ol><h3 id="密钥配置"><a href="#密钥配置" class="headerlink" title="密钥配置"></a>密钥配置</h3><p>继续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后直接三个回车即可，生成ssh密钥文件。</p><p>默认不需要设置密码</p><p>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制到GitHub右上角头像-&gt;Settings-&gt;keys页面，新建new SSH Key</p><p>Title为标题，任意填即可。将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。</p><p>在Git Bash中检测GitHub公钥设置是否成功，输入 <code>ssh git@github.com</code></p><p>原理：通过非对称加密rsa算法实现对push（提交）用户的认证</p><h4 id="打开pub报错"><a href="#打开pub报错" class="headerlink" title="打开pub报错"></a>打开pub报错</h4><p>解决方法</p><ol><li><a href="https://blog.csdn.net/J_____Q/article/details/108866850">cmd窗口查看</a></li><li>[在线打开 PUB 文件 ](<a href="https://blog.aspose.com/zh/pub/publisher-viewer-online-open-pub-file-online/#:~:text=%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BA%BF%E6%89%93%E5%BC%80">https://blog.aspose.com/zh/pub/publisher-viewer-online-open-pub-file-online/#:~:text=如何在线打开</a> PUB 文件 1 只需拖放您的 PUB 文件或使用浏览文件按钮上传。 您还可以提供文件,3 之后，您将能够在渲染后立即查看您的 PUB 文件。 4 将您的 PUB 页面保存为图像文件。)</li></ol><h4 id="检测GitHub公钥设置报错"><a href="#检测GitHub公钥设置报错" class="headerlink" title="检测GitHub公钥设置报错"></a>检测GitHub公钥设置报错</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">ASUS<span class="hljs-variable">@LAPTOP</span><span class="hljs-operator">-</span>GEMI5NEH MINGW64 <span class="hljs-operator">~</span><span class="hljs-operator">/</span>.ssh<br>$ ssh git<span class="hljs-variable">@github</span>.com<br>ssh: <span class="hljs-keyword">connect</span> <span class="hljs-keyword">to</span> host github.com port <span class="hljs-number">22</span>: Connection timed <span class="hljs-keyword">out</span><br></code></pre></td></tr></table></figure><p>解决方法</p><ol><li><a href="https://blog.csdn.net/the__future/article/details/130038818">关于本地git通过ssh链接github时 time out问题的解决方法_github timeout-CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/521340971">坑：ssh: connect to host github.com port 22: Connection refused - 知乎 (zhihu.com)</a></li><li>如果没有config文件可以自己创建，先输入内容。</li><li>保存时把类型选为“所有文件” 怎么弄？新建文本文档后，输完你的代码后，点击—文件—另存为—保存类型—所有文件就可以了,选完存储路径后可以不改文件名会直接覆盖掉。</li><li>另存无效，我直接修改后缀名</li><li><code>$ ssh -T git@github.com</code>检测是否连通，又有bug</li><li><a href="https://blog.csdn.net/fearlessxmm/article/details/90401690">解决The authenticity of host … can’t be established.</a></li><li>直接yes完成</li></ol><h2 id="三、创建blog（本地）"><a href="#三、创建blog（本地）" class="headerlink" title="三、创建blog（本地）"></a>三、创建blog（本地）</h2><p> 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p><p>使用npm命令安装Hexo，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli <br></code></pre></td></tr></table></figure><p>安装完成后，初始化我们的博客，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init blog<br></code></pre></td></tr></table></figure><p>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。</p><p>别按顺序输入以下三条命令（在init新的文件夹里打开命令行）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new test_my_site<br><br>hexo g<br><br>hexo s<br></code></pre></td></tr></table></figure><p>完成后，打开浏览器输入地址：</p><p>localhost:4000，可以看到新建的blog</p><h3 id="hexo-new-test-my-site的报错"><a href="#hexo-new-test-my-site的报错" class="headerlink" title="hexo new test_my_site的报错"></a>hexo new test_my_site的报错</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs subunit">PS D:\Blog\blog&gt; hexo new test_my_site<br><span class="hljs-keyword">ERROR </span>Cannot find module &#x27;moment&#x27;<br></code></pre></td></tr></table></figure><p>解决方法</p><p><a href="https://blog.csdn.net/qq_43592352/article/details/106922540">【node报错解决方案】Error: Cannot find module http-errors_node:module 报错-CSDN博客</a></p><h2 id="四、发布网站（Hexo与GitHub关联）"><a href="#四、发布网站（Hexo与GitHub关联）" class="headerlink" title="四、发布网站（Hexo与GitHub关联）"></a>四、发布网站（Hexo与GitHub关联）</h2><p>在blog根目录里的_config.yml文件称为<strong>站点配置文件</strong></p><p>themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题配置文件</strong></p><p>打开站点的配置文件_config.yml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts">deploy：<br>type：qit<br><span class="hljs-symbol">repo:</span> https:<span class="hljs-comment">//github.com/用户名/用户名.github.io.git</span><br><span class="hljs-symbol">branch:</span> master<br></code></pre></td></tr></table></figure><p>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git</p><p>指令的目录要在blog目录底下，不然可能报错。</p><p>发布逻辑：new -&gt; generate -&gt; sever -&gt; deploy </p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo g  <span class="hljs-comment">//生成静态文件</span><br>hexo s  <span class="hljs-comment">//本地预览</span><br>hexo d  <span class="hljs-comment">//部署文件</span><br></code></pre></td></tr></table></figure><h3 id="yml代码冒号后没有空格会报错"><a href="#yml代码冒号后没有空格会报错" class="headerlink" title="yml代码冒号后没有空格会报错"></a>yml代码冒号后没有空格会报错</h3><p>错误代码</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs fortran">PS D:\Blog\blog&gt; hexo clean<br>FATAL<br>YAMLException: can not read a <span class="hljs-keyword">block</span> mapping <span class="hljs-built_in">entry</span>; a multiline key may not be an <span class="hljs-keyword">implicit</span> key (<span class="hljs-number">107</span>:<span class="hljs-number">16</span>)<br><br> <span class="hljs-number">104</span> | deploy:<br> <span class="hljs-number">105</span> |   <span class="hljs-keyword">type</span>: <span class="hljs-string">&#x27;git&#x27;</span><br> <span class="hljs-number">106</span> |   repo:https://github.com/narrciss/narrciss.gi ...<br> <span class="hljs-number">107</span> |   branch:master<br>----------------------^<br></code></pre></td></tr></table></figure><h2 id="五、发布bug"><a href="#五、发布bug" class="headerlink" title="五、发布bug"></a>五、发布bug</h2><p>之前是404报错，但是之后可以访问，但是<strong>deploy总是失败</strong></p><p>删除title的tag内容之后可以预览，但不能deploy。</p><p>第二天deploy又可以了</p><h3 id="检测链接的命令"><a href="#检测链接的命令" class="headerlink" title="检测链接的命令"></a>检测链接的命令</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh -T -p <span class="hljs-number">443</span> git<span class="hljs-variable">@ssh</span>.github.com<br><span class="hljs-variable">$ </span>ssh git<span class="hljs-variable">@github</span>.com<br>使用` ssh -vT git<span class="hljs-variable">@github</span>.com`检测ssh链接过程<br></code></pre></td></tr></table></figure><h3 id="页面404报错提示"><a href="#页面404报错提示" class="headerlink" title="页面404报错提示"></a>页面404报错提示</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: unable to access &#x27;https://github.com/narrciss/narrciss.github.io.git/&#x27;: Recv failure: Connection was reset<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br>    at ChildProcess.&lt;anonymous&gt; (D:\Blog\blog\node_modules\hexo-util\lib\spawn.js:51:21)<br>    at ChildProcess.emit (node:events:514:28)<br>    at cp.emit (D:\Blog\blog\node_modules\cross-spawn\lib\enoent.js:34:29)<br>    at ChildProcess._handle.onexit (node:internal/child_process:294:12)<br></code></pre></td></tr></table></figure><h3 id="解决方法1（无效）"><a href="#解决方法1（无效）" class="headerlink" title="解决方法1（无效）"></a>解决方法1（无效）</h3><p>开启Devsidecar的Git代理发布文章也报错</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: unable to access &#x27;https://github.com/narrciss/narrciss.github.io.git/&#x27;: The requested URL returned error: 408<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br></code></pre></td></tr></table></figure><h3 id="解决方法2（无效）"><a href="#解决方法2（无效）" class="headerlink" title="解决方法2（无效）"></a>解决方法2（无效）</h3><p><strong>There isn’t a GitHub Pages site here.</strong></p><p>是不是应该编辑完成后生成静态文件再发布，还是不行。</p><h3 id="解决方法3（不适合）"><a href="#解决方法3（不适合）" class="headerlink" title="解决方法3（不适合）"></a>解决方法3（不适合）</h3><p><a href="https://blog.csdn.net/weixin_41256398/article/details/117994899">Hexo部署出现错误err: Error: Spawn failed解决方式_wei-xiansen的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/cairbin/p/14957855.html">解决hexo报错spwan failed - CairBin - 博客园 (cnblogs.com)</a></p><p>（注意链接1~2的<strong>报错code：128</strong>，我没有，使用此方法导致新的错误）</p><p>找到C盘的.gitconfig文件，删除增添的配置</p><p><a href="https://blog.csdn.net/wangxingxingalulu/article/details/118392299">idea使用git提交代码时报错Push failed Bad boolean config value ‘“false”‘ for ‘http.sslverify‘-CSDN博客</a></p><p>使用</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: bad boolean config value &#x27;fase&#x27; for &#x27;core.autocrlf&#x27;<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br></code></pre></td></tr></table></figure><p>修改</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: bad boolean config value &#x27;ture&#x27; for &#x27;core.autocrlf&#x27;<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br></code></pre></td></tr></table></figure><p>不小心删多了报错，完成后又回到原来的报错状态了。</p><p><a href="https://cosysn.github.io/2016/11/26/hexo-deploy-occur-fatal-Not-a-git-repository-or-any-of-the-parent-directories-git%E7%9A%84%E9%94%99%E8%AF%AF/#:~:text=%E5%B0%86hexo%E6%A0%B9%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84.deploy_git%2F%E5%88%A0%E9%99%A4%E6%8E%89%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BD%BF%E7%94%A8hexo,deploy%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82">使用hexo deploy时遇到fatal: Not a git repository (or any of the parent directories): .git的错误 | 楼兰故居 (cosysn.github.io)</a></p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">fatal: not a git repository (or any of the parent directories): .git<br>FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-keyword">Error: </span>Spawn failed<br></code></pre></td></tr></table></figure><h3 id="解决方法4（有点用）"><a href="#解决方法4（有点用）" class="headerlink" title="解决方法4（有点用）"></a>解决方法4（有点用）</h3><p>检查远程仓库状态：使用git remote -v命令检查远程仓库的状态，确保远程仓库的URL正确且可用。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">$ git remote -v<br>fatal: <span class="hljs-keyword">not</span> <span class="hljs-keyword">a</span> git repository (<span class="hljs-keyword">or</span> <span class="hljs-keyword">any</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> parent <span class="hljs-built_in">directories</span>): .git<br></code></pre></td></tr></table></figure><p>发现没有repository</p><p>检测ssh链接</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">$ ssh -T git@github.com<br><span class="hljs-keyword">Connection</span> <span class="hljs-keyword">reset</span> <span class="hljs-keyword">by</span> <span class="hljs-number">20.205</span><span class="hljs-number">.243</span><span class="hljs-number">.160</span> port <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_51594453/article/details/120605700">【Note】git上手-解决连接github时connection reset的问题_github connection reset-CSDN博客</a></p><p>修改了.ssh目录的config，之后的bug</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">fatal: unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">access</span> <span class="hljs-symbol">&#x27;https</span>://github.com/narrciss/narrciss.github.io.git/&#x27;: Failed <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> github.com <span class="hljs-keyword">port</span> <span class="hljs-number">443</span> <span class="hljs-keyword">after</span> <span class="hljs-number">21209</span> ms: Couldn<span class="hljs-symbol">&#x27;t</span> connect <span class="hljs-keyword">to</span> server<br>FATAL Something<span class="hljs-symbol">&#x27;s</span> wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br><span class="hljs-literal">Error</span>: Spawn failed<br></code></pre></td></tr></table></figure><h3 id="解决方法5（没有使用）"><a href="#解决方法5（没有使用）" class="headerlink" title="解决方法5（没有使用）"></a>解决方法5（没有使用）</h3><p><a href="https://zhuanlan.zhihu.com/p/521340971">坑：ssh: connect to host github.com port 22: Connection refused - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
